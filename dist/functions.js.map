{"version":3,"file":"functions.js","mappings":"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","sources":["webpack:///./src/functions/functions.js?"],"sourcesContent":["function capFirst(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nasync function equityHelper(symbol, metric, period = undefined, limit = undefined, options = undefined) {\n  // return [[\"Please login using the sidebar\"]];\n  // console.log(123)\n  var sub_options = options\n  if(!sub_options){sub_options=\"\"}\n\n  if (period == null) { period = undefined}\n  if (limit == null) { limit = undefined }\n  var api_key = readCookie(\"finsheet_api_key\");\n  // console.log(api_key)\n  var freq = period;\n  var ticker = symbol;\n\n  if (!api_key) {\n    return [[\"Please login using the sidebar\"]];\n  }\n\n  // Check if just 1 cell 1 ticker convert the array to string\n  // console.log('ticker', ticker)\n  if(Array.isArray(ticker)){\n    if(!Array.isArray(ticker[0])  ){\n      ticker = ticker[0]\n    } else if(ticker.length === 1 && ticker[0].length === 1){\n      ticker = ticker[0][0]\n    }\n  }\n\n  var unique_tickers = {}\n  // console.log('ticker', ticker)\n  if(!Array.isArray(ticker)){  // Do these checks if ticker is just one value (from FS_EquityFullFinancials)\n    if (!ticker) {\n      return [[\"Symbol cannot be empty\"]];\n    }\n    if (typeof ticker !== \"string\") {\n      return [[\"Symbol has to be a string\"]];\n    }\n    if(ticker.includes(\",\") || ticker.includes(\";\")){return [\"Invalid symbol\"]}\n    ticker = ticker.toUpperCase();\n  } else {      // This is from FS_EquityMetrics\n    if(limit !== undefined && limit !== 1 && limit !== \"\"  ){\n      return [['To get data for multiple stocks, limit has to be 1 or empty.']]\n    }\n\n    for(let sub_arr of ticker){\n      for(let tick of sub_arr){\n        if(tick){\n          unique_tickers[tick] = 1\n        }\n      }\n    }\n    if(Object.keys(unique_tickers).length < 1){return [['Symbols cannot be empty']]}\n    if(Object.keys(unique_tickers).length > 100){return [['Too many symbols, maximum is 100 each time.']]}\n  }\n\n\n  if (!metric) {\n    return [[\"Metric cannot be empty\"]];\n  }\n  metric = metric.toLowerCase();\n\n  if (!(metric in map_excel_name_to_id) && ![\"bs\", \"cf\", \"ic\"].includes(metric)) {\n    return [[\"Unsupported metric\"]];\n  }\n\n  if(metric === 'price_latest' && Array.isArray(ticker)  ){return [['This metric does not support multiple symbols at the same time.']]}\n\n  if (freq === \"\") {\n    freq = undefined;\n  }\n\n  if (typeof freq !== \"string\" && typeof freq !== \"undefined\") {\n    return [[\"Period has to be a string\"]];\n  }\n  if (limit === \"\") {\n    limit = undefined;\n  }\n  if (typeof limit !== \"number\" && typeof limit !== \"undefined\") {\n    return [[\"Limit has to be a positive integer\"]];\n  }\n  if (typeof limit !== \"undefined\" && limit <= 0) {\n    return [[\"Limit has to be a positive integer\"]];\n  }\n  ////// Check if frequency is valid\n  var id = metric in map_excel_name_to_id ? map_excel_name_to_id[metric] : metric;\n  var is_full_statement = [\"bs\", \"cf\", \"ic\"].includes(id);\n\n  // First if the freq is undefined and this metric has default freq, set to default\n  if (freq === undefined && (is_full_statement || map_metrics[id].default_freq)) {\n    if ([ \"cf\", \"ic\"].includes(id)) {\n      freq = \"TTM\";\n    } else if(id === 'bs'){\n      freq = \"Q\"\n    } else {\n      freq = map_metrics[id].default_freq;\n    }\n  }\n  // Next if user submit a freq but this metric has no freq (like price, share count...), then report error\n  else if (!is_full_statement && !map_metrics[id].default_freq && freq !== undefined) {\n    return [[\"This metric does not support periods\"]];\n  }\n\n  // Now check whether the freq users enter is valid or not\n  else if (freq !== undefined) {\n    freq = freq.toUpperCase();\n\n    if ([\"bs\", \"ic\"].includes(id) && freq.includes(\"YTD\")) {\n      return [[\"Period YTD is only available for cf\"]];\n    }\n    if (id === \"bs\" && freq.includes(\"TTM\")) {\n      return [[\"Period TTM is only available for ic and cf\"]];\n    }\n    // console.log(id, map_metrics[id].default_freq)\n    if (is_full_statement) {\n      var supported_freq = id === \"cf\" ? [\"FY\", \"TTM\", \"Q\", \"YTD\"] : id === \"bs\" ? [\"FY\", \"Q\"] : [\"FY\", \"TTM\", \"Q\"];\n      freq = isValidFreq_returnCleanString(freq, supported_freq, \"TTM\", id);\n    } else if (map_metrics[id].default_freq) {\n      freq = isValidFreq_returnCleanString(freq, map_metrics[id].supported_freq, map_metrics[id].default_freq, id);\n    } else {\n      freq = false;\n    }\n    if (freq === false) {\n      return [[\"Invalid period\"]];\n    }\n  }\n\n  var is_nh = limit < 2 || limit == undefined || freq.includes('.')  || freq.includes('-') || freq.includes('+') || sub_options.toLowerCase().indexOf('nh') !== -1\n  if(sub_options.toLowerCase().includes('h') && sub_options.toLowerCase().indexOf('nh') === -1){\n    is_nh = false\n  }\n  if(Array.isArray(ticker) && !is_nh){\n    return [[\"can't display header when there are multiple tickers as input\"]]\n  }\n  var only_get_latest_when_limit_larger_1 = false\n  if(!Array.isArray(ticker) && !is_nh && (limit < 2 || limit == undefined)){ // only 1 stock and needs header\n    if([\"TTM\", \"FY\", \"Q\", \"YTD\"].includes(freq)){ // if default, since can't call time series to get the exact date, set limit to 2 so that it calls time series automatically\n      only_get_latest_when_limit_larger_1 = true\n      limit = 2\n    }\n  }\n\n  ///// Combine limit with freq to become series freq if applicable\n  if (!is_full_statement && [\"TTM\", \"FY\", \"Q\", \"YTD\"].includes(freq) && limit && limit > 1) {\n    freq += \"@\" + limit;\n  }\n  /// If not applicable, set limit = undefined (avoid getting useless output from Go and make it convenient to process data later)\n  else if (!is_full_statement) {\n    limit = 'undefined';\n  }\n\n  // console.log(13, freq, limit)\n  //// Prepare stuff to send to Go\n  var prepare = {};\n  if (!is_full_statement) {\n    var metric_full_info = { field_code: id };\n    if (freq !== \"-1\" && freq !== \"\" && freq !== undefined) {\n      metric_full_info[\"period\"] = freq;\n    }\n    prepare = generate_query(\n        1,\n        \"watchlist\",\n        [],\n        [metric_full_info],\n        [],\n        [\"\", \"\"],\n        ticker,\n        [metric_full_info],\n        Array.isArray(ticker) ? Object.keys(unique_tickers) : [ticker]\n    );\n  }\n  prepare = { ...prepare, ...{ ticker: (Array.isArray(ticker)  ? '[' + Object.keys(unique_tickers).length.toString() : ticker), metric: id,\n      freq: freq, api_key: api_key, limit: limit ? limit.toString() : 'undefined' , is_full_statement: is_full_statement ? \"y\" : \"n\" , is_share: id == '37' ? 'y' :'n', is_nh: is_nh ? 'y' : 'n'} };\n  if (id == 206) {\n    prepare[\"is_latest_price\"] = \"1\";\n  }\n  // console.log('ticker', prepare)\n  //// Now get data\n  var urlParams = {api_key: api_key, limit: limit, is_full_statement: is_full_statement ? \"y\" : \"n\", freq: freq, is_share: id == '37' ? 'y' :'n', function_name: 'FS_EquityMetrics',  is_nh: is_nh ? 'y' : 'n'}\n  const url = link + \"/excel/standard?\" + new URLSearchParams(urlParams).toString()\n  const response = await fetch(url, {method: 'POST', body: JSON.stringify(prepare)});\n\n  if (!response.ok) {\n    var error = await response.text()\n    // console.log(\"err\", error)\n    try{return [[JSON.parse(error).error]]}\n    catch (e) {return [['Rate limit reached. Please try again later.']]}\n  }\n  var json = await response.json()\n  // console.log( json)\n  if('message' in json){return [[json.message]]}\n  return handle_receive_AR_EQUITY(json, is_full_statement, id, ticker, unique_tickers, is_nh, only_get_latest_when_limit_larger_1);\n}\n// async function equityHelper(symbol, metric, period = undefined, limit = undefined) {\n//   // return [[\"Please login using the sidebar\"]];\n//   // console.log(123)\n//\n//   if (period == null) { period = undefined}\n//   if (limit == null) { limit = undefined }\n//   var api_key = readCookie(\"finsheet_api_key\");\n//   // console.log(api_key)\n//   var freq = period;\n//   var ticker = symbol;\n//\n//   if (!api_key) {\n//     return [[\"Please login using the sidebar\"]];\n//   }\n//\n//   if (!ticker) {\n//     return [[\"Symbol cannot be empty\"]];\n//   }\n//   if (typeof ticker !== \"string\") {\n//     return [[\"Symbol has to be a string\"]];\n//   }\n//   if(ticker.includes(\",\") || ticker.includes(\";\")){return [\"Invalid symbol\"]}\n//   ticker = ticker.toUpperCase();\n//\n//\n//\n//   if (!metric) {\n//     return [[\"Metric cannot be empty\"]];\n//   }\n//   metric = metric.toLowerCase();\n//\n//   if (!(metric in map_excel_name_to_id) && ![\"bs\", \"cf\", \"ic\"].includes(metric)) {\n//     return [[\"Unsupported metric\"]];\n//   }\n//   if (freq === \"\") {\n//     freq = undefined;\n//   }\n//\n//   if (typeof freq !== \"string\" && typeof freq !== \"undefined\") {\n//     return [[\"Period has to be a string\"]];\n//   }\n//   if (limit === \"\") {\n//     limit = undefined;\n//   }\n//   if (typeof limit !== \"number\" && typeof limit !== \"undefined\") {\n//     return [[\"Limit has to be a positive integer\"]];\n//   }\n//   if (typeof limit !== \"undefined\" && limit <= 0) {\n//     return [[\"Limit has to be a positive integer\"]];\n//   }\n//   ////// Check if frequency is valid\n//   var id = metric in map_excel_name_to_id ? map_excel_name_to_id[metric] : metric;\n//   var is_full_statement = [\"bs\", \"cf\", \"ic\"].includes(id);\n//\n//   // First if the freq is undefined and this metric has default freq, set to default\n//   if (freq === undefined && (is_full_statement || map_metrics[id].default_freq)) {\n//     if ([ \"cf\", \"ic\"].includes(id)) {\n//       freq = \"TTM\";\n//     } else if(id === 'bs'){\n//       freq = \"Q\"\n//     } else {\n//       freq = map_metrics[id].default_freq;\n//     }\n//   }\n//   // Next if user submit a freq but this metric has no freq (like price, share count...), then report error\n//   else if (!is_full_statement && !map_metrics[id].default_freq && freq !== undefined) {\n//     return [[\"This metric does not support periods\"]];\n//   }\n//\n//   // Now check whether the freq users enter is valid or not\n//   else if (freq !== undefined) {\n//     freq = freq.toUpperCase();\n//\n//     if ([\"bs\", \"ic\"].includes(id) && freq.includes(\"YTD\")) {\n//       return [[\"Period YTD is only available for cf\"]];\n//     }\n//     if (id === \"bs\" && freq.includes(\"TTM\")) {\n//       return [[\"Period TTM is only available for ic and cf\"]];\n//     }\n//\n//     if (is_full_statement) {\n//       var supported_freq = id === \"cf\" ? [\"FY\", \"TTM\", \"Q\", \"YTD\"] : id === \"bs\" ? [\"FY\", \"Q\"] : [\"FY\", \"TTM\", \"Q\"];\n//       freq = isValidFreq_returnCleanString(freq, supported_freq, \"TTM\", id);\n//     } else if (map_metrics[id].default_freq) {\n//       freq = isValidFreq_returnCleanString(freq, map_metrics[id].supported_freq, map_metrics[id].default_freq, id);\n//     } else {\n//       freq = false;\n//     }\n//     if (freq === false) {\n//       return [[\"Invalid period\"]];\n//     }\n//   }\n//   ///// Combine limit with freq to become series freq if applicable\n//   if (!is_full_statement && [\"TTM\", \"FY\", \"Q\", \"YTD\"].includes(freq) && limit && limit > 1) {\n//     freq += \"@\" + limit;\n//   }\n//   /// If not applicable, set limit = undefined (avoid getting useless output from Go and make it convenient to process data later)\n//   else if (!is_full_statement) {\n//     limit = undefined;\n//   }\n//   //// Prepare stuff to send to Go\n//   var prepare = {};\n//   if (!is_full_statement) {\n//     var metric_full_info = { field_code: id };\n//     if (freq !== \"-1\" && freq !== \"\" && freq !== undefined) {\n//       metric_full_info[\"period\"] = freq;\n//     }\n//     prepare = generate_query(\n//         1,\n//         \"watchlist\",\n//         [],\n//         [metric_full_info],\n//         [],\n//         [\"\", \"\"],\n//         ticker,\n//         [metric_full_info],\n//         [ticker]\n//     );\n//   }\n//   prepare = { ...prepare, ...{ ticker: ticker, metric: id, freq: freq, api_key: api_key, limit: limit , is_full_statement: is_full_statement ? \"y\" : \"n\" } };\n//   if (id == 206) {\n//     prepare[\"is_latest_price\"] = \"1\";\n//   }\n//   //// Now get data\n//   const url = link + \"/qweiop/standard?\" + new URLSearchParams(prepare).toString()\n//   const response = await fetch(url);\n//\n//   if (!response.ok) {\n//     var error = await response.text()\n//     // console.log(\"err\", error)\n//     try{return [[JSON.parse(error).error]]}\n//     catch (e) {return [['Rate limit reached. Please try again later.']]}\n//   }\n//   var json = await response.json()\n//   // console.log(response, json)\n//   if('message' in json){return [[json.message]]}\n//   return handle_receive_AR_EQUITY(json, is_full_statement, id);\n// }\n\n/**\n * @customfunction FS_TEST FS_Test\n * @param symbol {string[][]} Stock Symbol.\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_Test(symbol){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return [[\"\"]]}\n  var ticker = symbol\n\n\n  if(Array.isArray(ticker)){\n    if(!Array.isArray(ticker[0])  ){\n      ticker = ticker[0]\n    } else if(ticker.length === 1 && ticker[0].length === 1){\n      ticker = ticker[0][0]\n    }\n  }\n\n  if(!Array.isArray(ticker)){\n    ticker = [[ticker]]\n  } else {// todo: for now only allow 1 ticker, in the future when find a way to get latest price efficiently for multi stocks then\n          //       allow multi stocks\n    return [['Multiple tickers are not allowed.']]\n  }\n\n  var unique_tickers = {}\n  for(let sub_arr of ticker){\n    for(let tick of sub_arr){\n      if(tick){\n        unique_tickers[tick] = 1\n      }\n    }\n  }\n\n  if(Object.keys(unique_tickers).length < 1){return [['Symbols cannot be empty']]}\n  if(Object.keys(unique_tickers).length > 100){return [['Too many symbols, maximum is 100 each time.']]}\n\n\n  //// Now get data\n  var prepare = {ticker: Object.keys(unique_tickers), api_key: api_key,   }\n\n  var urlParams = {  api_key: api_key, }\n  const url = link + \"/excel/latest?\" + new URLSearchParams(urlParams).toString()\n  const response = await fetch(url, {method: 'POST', body: JSON.stringify(prepare)});\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n  }\n\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n\n  return [[json.data]]\n}\n\n\n/**\n * @customfunction FS_EQUITYMETRICS FS_EquityMetrics\n * @param symbol {string[][]} Stock Symbol.\n * @param metric {string} Metric.\n * @param [period] {string} Period (optional).\n * @param [limit] {number} Limit (optional, default to 1).\n * @param [options] {string} Options (optional).\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EquityMetrics(symbol, metric, period = undefined, limit = undefined, options = undefined, invocation){\n  if(!metric){return [[\"Metric cannot be empty\"]]}\n  metric = metric.toLowerCase()\n  if(!(metric in map_excel_name_to_id) ){return [[\"Unsupported metric\"]]}\n  if(!symbol){return [['']]}\n  const  to_return = equityHelper(symbol, metric, period , limit , options)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\n/**\n * @customfunction FS_EQUITYFULLFINANCIALS FS_EquityFullFinancials\n * @param symbol {string} Stock Symbol.\n * @param statement {string} Statement (bs, ic or cf).\n * @param [period] {string} Period (optional).\n * @param [limit] {number} Limit (optional, default to 1).\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EquityFullFinancials(symbol, statement, period = undefined, limit = undefined, invocation){\n  var metric = statement\n  if(!metric){return [[\"Metric cannot be empty\"]]}\n  metric = metric.toLowerCase()\n  if(!['bs', 'cf', 'ic'].includes(metric) ){return [[\"Unsupported metric\"]]}\n  const  to_return = equityHelper(symbol, metric, period , limit )\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\n\nvar valid_resolution = {\n  '1':1, '5':1, '15':1, '30':1, '60':1,\n  'D': 1, 'W': 1, 'M': 1, 'd': 1, 'w': 1, 'm': 1\n}\nvar lower_res = { 'd': 1, 'w': 1, 'm': 1 }\nvar properties = [\"close\", \"open\", \"high\", \"low\", \"volume\"]\n\n\n\nasync function candlesHelper(symbol, resolution, from, to = undefined,metrics= undefined, options= undefined, which=\"stock\" ) {\n  if (to == null) { to = undefined }\n  // console.log(from, to)\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if (!symbol) { return [[\"Symbol cannot be empty\"]] }\n  if (typeof symbol !== 'string') { return [['Symbol has to be a string']] }\n  if(symbol.includes(\",\") || symbol.includes(\";\")){return [\"Invalid symbol\"]}\n  symbol = symbol.toUpperCase()\n\n  if (!(resolution in valid_resolution)) { return [['Invalid resolution']] }\n  if (resolution in lower_res) { resolution = resolution.toUpperCase() }\n\n  var current_time = Date.parse(new Date()) / 1000\n  //// Check from\n  if(!from){return [[\"'from' cannot be empty\"]]}\n\n  // Handle unix time\n  if(typeof from == 'number' || !isNaN(from)){\n    if(from < 73000){\n      from = (from -25569)*86400\n    }\n    from = Math.round(from)\n  }\n  // Now convert string/Date object or whatever input user gives.\n  else{\n    from = Date.parse(from) / 1000\n    if(isNaN(from) || from < 0) return [[\"Invalid 'from'\"]]\n  }\n\n  //// Check to\n  if(to == '' || to === undefined){\n    to = current_time\n  }\n  // Handle unix time\n  else if(typeof to == 'number' || !isNaN(to)){\n    if(to < 73000){\n      to = (to -25569)*86400\n    }\n    to = Math.round(to)\n  }\n  // Now convert string/Date object or whatever input user gives.\n  else{\n    to = Date.parse(to) / 1000\n    if(isNaN(to) || to < 0) return [[\"Invalid 'to'\"]]\n  }\n  if(to <from){return [[\"'to' has to be after or equal to 'from'\"]]}\n  var to_equal_from = 0\n  if(to == from){\n    to = from + resolution_map_to_seconds[resolution]\n    to_equal_from = 1\n  }\n\n  var function_name = 'FS_EquityCandles'\n  if(which == 'future'){\n    function_name = 'FS_FuturesCandles'\n  } else if(which == 'etf'){\n    function_name = 'FS_EtfCandles'\n  } if(which == 'mutual_fund'){\n    function_name = 'FS_MutualFundCandles'\n  } if(which == 'crypto'){\n    function_name = 'FS_CryptoCandles'\n  } if(which == 'forex'){\n    function_name = 'FS_ForexCandles'\n  }\n\n  //// Send and get data\n  var prepare = { ticker: symbol, resolution: resolution, from: from, to: to, api_key: api_key, properties: JSON.stringify(properties) , which: which, function_name: function_name }\n\n\n  //// Now get data\n  const url = link + \"/excel/candles?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n\n  }\n\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n\n  // Handle options\n  if(!options){options = ''}\n  var is_nh = options.toLowerCase().includes('nh')\n  var is_desc = options.toLowerCase().includes('-')\n  var is_ct = options.toLowerCase().includes('ct')\n\n  // Handle metrics / columns\n  var headers = []\n  var map_col_name = {'Period': 't',  'Open': 'o', 'High': 'h', 'Low': 'l','Close': 'c', 'Volume': 'v'}\n  if(!metrics || metrics == \"all\" || metrics == \"All\" || metrics == 'ALL'){headers = ['Period',  'Open', 'High', 'Low','Close', 'Volume']}\n  else {\n    var arr_metrics = metrics.split('&')\n    for(var elem of arr_metrics){\n      var reformat = capFirst(elem.toLowerCase())\n      if(reformat in map_col_name){\n        headers.push(reformat)\n      }\n    }\n  }\n\n  var data_to_return = []\n  if(!data.c ){return [['No data']]}\n  if(data.c.constructor === Array){\n    for(var i=0;i<data.c.length;i++){\n      // var pre_time = new Date(data.t[i] * 1000);\n      // var correct_time = new Date(pre_time.getTime() + pre_time.getTimezoneOffset() * 60000);\n      // if(i<1){Logger.log([data.t[i], new Date(data.t[i] * 1000).toISOString()] )}\n      // data_to_return.push([new Date(data.t[i] * 1000), data.c[i], data.o[i], data.h[i], data.l[i], data.v[i]])\n\n      var one_row = []\n      for(var elem of headers){\n        if(elem == 'Period'){\n          one_row.push(data.t && data.t[i] ? (is_ct ? new Date(data.t[i] * 1000) : data.t[i]): '')\n        } else {\n          one_row.push(data[map_col_name[elem]] && data[map_col_name[elem]][i] ? data[map_col_name[elem]][i] : '')\n        }\n      }\n      data_to_return.push(one_row)\n      if(to_equal_from){break}\n\n    }\n  } else { // This result is from Quote (get the latest)\n    data_to_return.push([\n      data.t ?  new Date(data.t  * 1000) : '',\n      data.o ? data.o : '' ,\n      data.h ? data.h : '' ,\n      data.l ? data.l : '' ,\n      data.c ? data.c : '' ,\n      data.v  ? data.v : ''\n    ])\n  }\n\n  if(data_to_return.length < 1){return [['No data']]}\n\n  if(is_desc){\n    data_to_return.reverse()\n  }\n\n  if(!is_nh){\n    data_to_return = [headers].concat(data_to_return)\n  }\n  return data_to_return\n}\n\n/**\n * @customfunction FS_EQUITYCANDLES FS_EquityCandles\n * @param symbol {string} Stock Symbol.\n * @param resolution {string} Resolution.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @param [metrics] {string} Metrics (optional).\n * @param [options] {string} Options (optional).\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EquityCandles(symbol, resolution, from= undefined, to = undefined, metrics=undefined, options=undefined , invocation){\n  const  to_return = candlesHelper(symbol, resolution, from, to , metrics, options,\"stock\" )\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\n/**\n * @customfunction FS_FOREXCANDLES FS_ForexCandles\n * @param symbol {string} Forex Symbol.\n * @param resolution {string} Resolution.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @param [metrics] {string} Metrics (optional).\n * @param [options] {string} Options (optional).\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_ForexCandles(symbol, resolution, from= undefined, to = undefined, metrics=undefined, options=undefined, invocation){\n  const  to_return = candlesHelper(symbol, resolution, from, to , metrics, options,\"forex\" )\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\n/**\n * @customfunction FS_CRYPTOCANDLES FS_CryptoCandles\n * @param symbol {string} Crypto Symbol.\n * @param resolution {string} Resolution.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @param [metrics] {string} Metrics (optional).\n * @param [options] {string} Options (optional).\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_CryptoCandles(symbol, resolution, from= undefined, to = undefined, metrics=undefined, options=undefined, invocation){\n  const  to_return = candlesHelper(symbol, resolution, from, to , metrics, options,\"crypto\" )\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n\n}\n\n/**\n * @customfunction FS_ETFCANDLES FS_EtfCandles\n * @param symbol {string} Etf Symbol.\n * @param resolution {string} Resolution.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @param [metrics] {string} Metrics (optional).\n * @param [options] {string} Options (optional).\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EtfCandles(symbol, resolution, from= undefined, to = undefined, metrics=undefined, options=undefined, invocation){\n  const  to_return = candlesHelper(symbol, resolution, from, to , metrics, options,\"etf\" )\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\n/**\n * @customfunction FS_MUTUALFUNDCANDLES FS_MutualFundCandles\n * @param symbol {string} Mutual Fund Symbol.\n * @param resolution {string} Resolution.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @param [metrics] {string} Metrics (optional).\n * @param [options] {string} Options (optional).\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_MutualFundCandles(symbol, resolution, from= undefined, to = undefined, metrics=undefined, options=undefined , invocation){\n   const  to_return = candlesHelper(symbol, resolution, from, to , metrics, options,\"mutual_fund\" )\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nasync function helperAllRate(base_currency){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n\n  //// Now get data\n  var prepare = {base_currency: base_currency, api_key: api_key, function_name: 'FS_ForexAllRates'}\n  const url = link + \"/excel/forex_all_rates?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n  }\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n  var data_to_return = []\n  for(var key of Object.keys(data)){\n    data_to_return.push([key, data[key]])\n  }\n  return data_to_return.length > 0 ? data_to_return : [['No data']]\n}\n/**\n * @customfunction FS_FOREXALLRATES FS_ForexAllRates\n * @param base_currency {string} base_currency.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_ForexAllRates(base_currency=\"USD\", invocation ){\n  const  to_return = helperAllRate(base_currency)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nvar map_name_crypto_profile = {\n  \"name\": \"Name\",\n  \"longName\": \"Full Name\",\n  \"description\": \"Description\",\n  \"marketCap\": \"Market Capitalization\",\n  \"totalSupply\": \"Total Supply\",\n  \"maxSupply\": \"Max Supply\",\n  \"circulatingSupply\": \"Circulating Supply\",\n  \"launchDate\": \"Launch Date\",\n  \"website\": \"Website\",\n  \"proofType\": \"Proof Type\"\n}\n\nasync function helperCryptoProfile(symbol){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return [[\"Symbol cannot be empty\"]]}\n  if(typeof symbol !== 'string'){return [['Symbol has to be a string']]}\n  if(symbol.includes(':')){return [['Invalid symbol, make sure it does not include exchange name']]}\n  symbol = symbol.toUpperCase()\n\n  //// Now get data\n  var prepare = {symbol: symbol, api_key: api_key, which: \"crypto_profile\", function_name: 'FS_CryptoProfile'}\n  const url = link + \"/excel/asset_profile?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n  }\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n  var data_to_return = []\n  for(var key of Object.keys(map_name_crypto_profile)){\n    if(data[key]){\n      data_to_return.push([map_name_crypto_profile[key], data[key]])\n    }\n  }\n  return data_to_return\n}\n/**\n * @customfunction FS_CRYPTOPROFILE FS_CryptoProfile\n * @param symbol {string} Crypto symbol such as BTC or ETH.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_CryptoProfile(symbol, invocation ){\n  const  to_return = helperCryptoProfile(symbol)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\n\nvar map_name_etf_profile = {\n  \"assetClass\": \"Asset Class\",\n  \"aum\": \"AUM\",\n  \"avgVolume\": \"Avg Volume\",\n  \"cusip\": \"CUSIP\",\n  \"description\": \"Description\",\n  \"domicile\": \"Domicile\",\n  \"etfCompany\": \"ETF Issuer\",\n  \"expenseRatio\": \"Expense Ratio\",\n  \"inceptionDate\": \"Inception Date\",\n  \"investmentSegment\": \"Investment Segment\",\n  \"isin\": \"ISIN\",\n  \"name\": \"Name\",\n  \"nav\": \"NAV\",\n  \"navCurrency\": \"NAV Currency\",\n  \"priceToBook\": \"P/B\",\n  \"priceToEarnings\": \"P/E\",\n  \"trackingIndex\": \"Tracking Index\",\n  \"website\": \"Website\"\n}\nasync function helperEtfProfile(symbol){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return [[\"Symbol cannot be empty\"]]}\n  if(typeof symbol !== 'string'){return [['Symbol has to be a string']]}\n  symbol = symbol.toUpperCase()\n\n  //// Now get data\n  var prepare = {symbol: symbol, api_key: api_key, which: \"etf_profile\", function_name: 'FS_EtfProfile'}\n  const url = link + \"/excel/asset_profile?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n  }\n\n  var json = await response.json()\n  // console.log(json)\n  if('message' in json){return [[json.message]]}\n  var data = json.data.profile\n  var data_to_return = []\n  if(json.data.symbol){data_to_return = [['Symbol', json.data.symbol]]}\n  for(var key of Object.keys(map_name_etf_profile)){\n    if(data[key]){\n      data_to_return.push([map_name_etf_profile[key], data[key]])\n    }\n  }\n  return data_to_return.length > 0 ? data_to_return : [['No data']]\n}\n\n/**\n * @customfunction FS_ETFPROFILE FS_EtfProfile\n * @param symbol {string} ETF symbol.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EtfProfile(symbol, invocation){\n  const  to_return = helperEtfProfile(symbol)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nvar map_name_mutual_fund_profile = {\n  \"benchmark\": \"Benchmark\",\n  \"beta\": 'Beta',\n  \"category\": \"Category\",\n\n  \"description\": 'Description',\n  \"expenseRatio\": 'Expense Ratio',\n\n  \"fundFamily\": \"Fund Family\",\n  \"inceptionDate\": \"Inception Date\",\n  \"investmentSegment\": \"Investment Segment\",\n\n  \"name\": \"Full Name\",\n\n  \"totalNav\": \"Total NAV\",\n  \"turnover\": \"Turnover\"\n}\n\nasync function helperMutualFundProfile(symbol){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return [[\"Symbol cannot be empty\"]]}\n  if(typeof symbol !== 'string'){return [['Symbol has to be a string']]}\n  symbol = symbol.toUpperCase()\n\n  //// Now get data\n  var prepare = {symbol: symbol, api_key: api_key, which: \"mutual_fund_profile\", function_name: 'FS_MutualFundProfile'}\n  const url = link + \"/excel/asset_profile?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n  }\n\n  var json = await response.json()\n  // console.log(json)\n  if('message' in json){return [[json.message]]}\n  var data = json.data.profile\n  var data_to_return = []\n  if(json.data.symbol){data_to_return = [['Symbol', json.data.symbol]]}\n  for(var key of Object.keys(map_name_mutual_fund_profile)){\n    if(data[key]){\n      data_to_return.push([map_name_mutual_fund_profile[key], data[key]])\n    }\n  }\n  return data_to_return.length > 0 ? data_to_return : [['No data']]\n}\n\n/**\n * @customfunction FS_MUTUALFUNDPROFILE FS_MutualFundProfile\n * @param symbol {string} Mutual Fund symbol.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_MutualFundProfile(symbol, invocation ){\n  const  to_return = helperMutualFundProfile(symbol)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nasync function holdingsHelper(symbol, skip, which){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return [[\"Symbol cannot be empty\"]]}\n  if(typeof symbol !== 'string'){return [['Symbol has to be a string']]}\n  symbol = symbol.toUpperCase()\n\n  if(skip == undefined || skip === ''){skip = 0}\n  if(typeof skip !== 'number' && typeof skip !== 'undefined' ){return 'skip has to be an integer'}\n\n  var function_name = 'FS_EtfHoldings'\n  if(which == 'mutual_fund_holdings'){\n    function_name = 'FS_MutualFundsHoldings'\n  }\n\n  var prepare = {symbol: symbol, skip: skip.toString(), api_key: api_key, which: which, function_name: function_name}\n  const url = link + \"/excel/asset_holdings?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n  }\n\n  var json = await response.json()\n  // console.log(json)\n  if('message' in json){return json.message}\n\n  try {\n    var data_to_return = [['Date', json.data.atDate, '','','','', ''], ['Symbol', 'CUSIP', 'ISIN', 'Name', 'Percent', 'Share', 'Value']]\n    var data= json.data.holdings\n    for(var dic of data){\n      var arr = []\n      for(var key of Object.keys(map_name_holdings)){\n        if(dic[key] !== null && dic[key] !== undefined){arr.push(dic[key])}else{arr.push('')}\n      }\n      data_to_return.push(arr)\n    }\n    return data_to_return.length > 2 ? data_to_return : [['No data']]\n  } catch(e){\n    return [['No data']]\n  }\n}\nvar map_name_holdings = {\n  \"symbol\": \"Symbol\",\n  \"cusip\": 'CUSIP',\n  \"isin\": \"ISIN\",\n  \"name\": 'Name',\n  \"percent\": 'Percent',\n  \"share\": \"Share\",\n  \"value\": \"Value\",\n}\n/**\n * @customfunction FS_ETFHOLDINGS FS_EtfHoldings\n * @param symbol {string} ETF symbol.\n * @param [skip] {number} Skip first n results.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EtfHoldings(symbol, skip, invocation){\n  const  to_return = holdingsHelper(symbol, skip, 'etf_holdings')\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n/**\n * @customfunction FS_MUTUALFUNDHOLDINGS FS_MutualFundHoldings\n * @param symbol {string} Mutual Fund symbol.\n * @param [skip] {number} Skip first n results.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_MutualFundHoldings(symbol, skip, invocation){\n  const  to_return = holdingsHelper(symbol, skip, 'mutual_fund_holdings')\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nasync function helperLatest(symbol){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return [[\"\"]]}\n  var ticker = symbol\n\n\n  if(Array.isArray(ticker)){\n    if(!Array.isArray(ticker[0])  ){\n      ticker = ticker[0]\n    } else if(ticker.length === 1 && ticker[0].length === 1){\n      ticker = ticker[0][0]\n    }\n  }\n\n  if(!Array.isArray(ticker)){\n    ticker = [[ticker]]\n  } else {// todo: for now only allow 1 ticker, in the future when find a way to get latest price efficiently for multi stocks then\n    //       allow multi stocks\n    return [['Multiple tickers are not allowed.']]\n  }\n\n  var unique_tickers = {}\n  for(let sub_arr of ticker){\n    for(let tick of sub_arr){\n      if(tick){\n        unique_tickers[tick] = 1\n      }\n    }\n  }\n\n  if(Object.keys(unique_tickers).length < 1){return [['Symbols cannot be empty']]}\n  if(Object.keys(unique_tickers).length > 100){return [['Too many symbols, maximum is 100 each time.']]}\n\n\n  //// Now get data\n  var prepare = {ticker: Object.keys(unique_tickers), api_key: api_key,   }\n\n  var urlParams = {  api_key: api_key, }\n  const url = link + \"/excel/latest?\" + new URLSearchParams(urlParams).toString()\n  const response = await fetch(url, {method: 'POST', body: JSON.stringify(prepare)});\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n  }\n\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n\n  return [[json.data]]\n}\n/**\n * @customfunction FS_LATEST FS_Latest\n * @param symbol {string[][]} Symbol.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_Latest(symbol, invocation){\n  const  to_return = helperLatest(symbol)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\n////// Websocket\n\n\nfunction connect(first_symbol) {\n  var api_key = readCookie(\"finsheet_api_key\");\n  window.socket = new WebSocket('wss://' + link.slice(8,) + '/ws?api_key=' + api_key)\n\n  window.socket.onopen = function() {\n    console.log('Socket open')\n    if(first_symbol){\n      window.socket.send(JSON.stringify({symbol: first_symbol, \"type\": \"subscribe\",}))\n      window.can_call_streaming = true\n    }\n  };\n\n  window.socket.onmessage = function(e) {\n    if(window.Should_Update_Streaming){   // Whether user chooses to pause or not pause streaming\n      var data = JSON.parse(e.data)\n      var symbol = data.data[0].s\n      window.OldBigSymbolPriceMap[symbol] = window.BigSymbolPriceMap[symbol]\n      window.BigSymbolPriceMap[symbol] = data.data[0].p\n    }\n  };\n\n  window.socket.onclose = function(e) {\n    console.log(12, e)\n    setTimeout(function() {\n      if(e.code === 1000){\n        window.have_not_reconnect_websocket = false\n        connect();\n      } else {\n        window.can_call_streaming = false\n      }\n\n    }, 1000);\n  };\n\n  window.socket.onerror = function(err) {\n    console.log(err)\n    console.error('Socket encountered error: ', err.message, 'Closing socket');\n    window.socket.close();\n  };\n}\n\nwindow.OldBigSymbolPriceMap = {}\nwindow.BigSymbolPriceMap = {}\n// window.OldEachCellStreamingValue = {}\nwindow.EachCellStreamingValue = {}\n\nwindow.Should_Update_Streaming = true\nwindow.have_not_reconnect_websocket = true\nwindow.have_not_add_on_calculated_trigger = true\nwindow.have_not_set_interval_change_color = true\n\nwindow.can_call_streaming = true\n\nconnect()\n\nwindow.Cells_to_refresh = {}\nwindow.Sheet_to_refresh = {}\nwindow.have_not_start_refresh_limit_reach = 1\n\n/**\n * Stream Real-time price for Stocks, Cryptos, Forex, ETFs and Mutual Funds.\n * @customfunction FS_STREAMING FS_Streaming\n * @param symbol {string}  Symbol.\n * @param {CustomFunctions.StreamingInvocation<string>} invocation * ...\n */\nasync function FS_Streaming(symbol, invocation ){\n  Excel.run(async (context) => {\n    if(window.have_not_set_interval_change_color){\n      window.have_not_set_interval_change_color = false\n      setInterval(async () => {\n        if(!window.Should_Update_Streaming){return}\n        var active_sheet = context.workbook.worksheets.getActiveWorksheet();\n        var range = active_sheet.getUsedRange(true);\n        range.load(\"formulas\");\n        range.load(\"address\");\n        range.load(\"values\");\n\n        await context.sync()\n            .then(async function () {\n              var sheet_id = active_sheet.id\n\n              var address_portion = range.address.split('!')[1].split(':')[0]\n              var starting_row = 0, starting_col = 0\n              for(var i=0; i<address_portion.length; i++){\n                if(!isNaN(address_portion[i])){\n                  starting_col = colnameToNumber(address_portion.slice(0,i)) - 1\n                  starting_row = parseInt(address_portion.slice(i,)) -1\n                  break\n                }\n              }\n\n\n\n\n              var green_cell = []\n              var red_cell = []\n              var formulas = range.formulas\n              var values = range.values\n              for(var i=0;i<formulas.length; i++){\n                for(var j=0;j<formulas[0].length; j++ ){\n                  var current_formula = formulas[i][j]\n                  if(current_formula.toLowerCase().startsWith('=fs_streaming(')){\n                    var arr = current_formula.split('\"')\n                    // This one handle when formula is direct like FS_Streaming(\"AAPL\")\n                    if(arr.length === 3){\n                      var symbol = arr[1]\n                      if(window.BigSymbolPriceMap[symbol] && window.OldBigSymbolPriceMap[symbol]){\n                        if(window.BigSymbolPriceMap[symbol] > window.OldBigSymbolPriceMap[symbol]){\n                          green_cell.push([starting_row + i, starting_col + j])\n                        } else if(window.BigSymbolPriceMap[symbol] < window.OldBigSymbolPriceMap[symbol]){\n                          red_cell.push([starting_row + i, starting_col + j])\n                        }\n                        // // After updating color once, set they equal each other so that no more color change while waiting for new websocket message\n                        // window.OldBigSymbolPriceMap[symbol] = window.BigSymbolPriceMap[symbol]\n                      }\n                    }\n\n                    // This one handle when formula refers to another cell (save data to global dict, compare before and after\n                    else {\n                      var used_key = sheet_id + '@@' + (starting_row + i) + '@@' + (starting_col + j)\n                      if(window.EachCellStreamingValue[used_key] && values[i][j]){\n                        if(values[i][j] > window.EachCellStreamingValue[used_key] ){\n                          green_cell.push([starting_row + i, starting_col + j])\n                        } else if(values[i][j] < window.EachCellStreamingValue[used_key] ){\n                          red_cell.push([starting_row + i, starting_col + j])\n                        }\n                      }\n                      window.EachCellStreamingValue[used_key] = values[i][j]\n                    }\n                  }\n                }\n              }\n\n              // Now change background color\n              var temp_arr = [[green_cell, '#2cbd54'], [red_cell, '#ff6669']]\n              for(var sub_arr of temp_arr){\n                var cell_text = ''\n                for(var arr of sub_arr[0]){\n                  var col_name = getExcelColName(arr[1])\n                  cell_text += col_name.toUpperCase() + (arr[0] + 1) + ':' + col_name.toUpperCase() + (arr[0] + 1) + ', '\n                }\n                if(cell_text !== ''){cell_text = cell_text.slice(0, cell_text.length - 2)}\n                const  green_area = active_sheet.getRanges(cell_text);\n                if(cell_text){\n                  // console.log(cell_text, window.OldBigSymbolPriceMap, window.BigSymbolPriceMap)\n                  green_area.format.font.color = sub_arr[1];\n\n                  await context.sync().then(async function(){\n                    // setTimeout(async function() {\n                    //   const green_area = active_sheet.getRanges(cell_text);\n                    //   green_area.format.font.color = \"black\";\n                    //   await context.sync()\n                    // }, 500);\n\n                  });\n                }\n              }\n\n\n            });\n\n      }, 500);\n\n\n    }\n\n  });\n\n\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return \"Please login using the sidebar\" }\n  if (!symbol) { return \"Symbol cannot be empty\" }\n  if (typeof symbol !== 'string') { return 'Symbol has to be a string' }\n\n  symbol = symbol.toUpperCase()\n  // The first if is to use the first time when user open the file, since websocket is delayed, we connect to websocket here\n  if((!window.socket || window.socket.readyState !== window.socket.OPEN) && window.have_not_reconnect_websocket){\n    // console.log(window.socket.readyState, window.socket.OPEN)\n    connect(symbol)\n  } else if(!(symbol in window.BigSymbolPriceMap)){\n    // console.log(0)\n    let msg = {symbol: symbol,   type: \"subscribe\"}\n    window.socket.send(JSON.stringify(msg))\n    window.can_call_streaming = true\n    // console.log(3)\n  }\n\n  const timer = setInterval(() => {\n    if(window.can_call_streaming){\n      const result = window.BigSymbolPriceMap[symbol];\n      // console.log(invocation)\n      invocation.setResult(result);\n    } else {\n      invocation.setResult('You need a Plus or Pro membership to stream real-time price.');\n    }\n\n  }, 500);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n\nasync function helperPR(symbol, resolution){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if (!symbol) { return [[\"Symbol cannot be empty\"]] }\n  if (typeof symbol !== 'string') { return [['Symbol has to be a string']] }\n  if(symbol.includes(\",\") || symbol.includes(\";\")){return [\"Invalid symbol\"]}\n  symbol = symbol.toUpperCase()\n\n  if (!(resolution in valid_resolution)) { return [['Invalid resolution']] }\n  if (resolution in lower_res) { resolution = resolution.toUpperCase() }\n\n  var prepare = {api_key : api_key, symbol: symbol, resolution: resolution, which: 'pattern_recognition', function_name: 'FS_PatternRecognition'}\n  // console.log(0, prepare)\n  const url = link + \"/excel/technical?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    var error = await response.text()\n    try{return [[JSON.parse(error).error]]}\n    catch (e) {return [[\"No data\"]]}\n  }\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  try {\n    var data = json.data\n    var data_to_return = []\n    var max_len = 1\n    for(var dic of data){\n      if(!dic.patternname || !dic.symbol){continue}\n      var one_result = [['Pattern Name',dic.patternname ]]\n      for(var key of Object.keys(dic)){\n        if(key !== 'patternname' && key !== 'symbol'){\n          one_result.push([capFirst(key), dic[key]])\n        }\n      }\n\n      if(one_result.length > max_len){\n        max_len = one_result.length\n      }\n      data_to_return.push(one_result)\n    }\n    for(var i=0;i<data_to_return.length; i++){\n      const number_to_add = max_len - data_to_return[i].length\n      for(var j=0; j< number_to_add; j++){\n        data_to_return[i].push(['',''])\n        // console.log(data_to_return[i].length)\n      }\n    }\n    if (data_to_return.length < 1 ){return  [['No data']]}\n    var final = []\n    for(var i=0;i<data_to_return[0].length; i++){\n      var arr = []\n      for(var temp of data_to_return){\n        arr = arr.concat(temp[i])\n      }\n      final.push(arr)\n    }\n    // console.log(final)\n    return final\n  } catch (e) {\n    return [['No data']]\n  }\n}\n\n/**\n * @customfunction FS_PATTERNRECOGNITION FS_PatternRecognition\n * @param symbol {string} Symbol.\n * @param resolution {string} Resolution.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_PatternRecognition(symbol, resolution, invocation){\n  const  to_return = helperPR(symbol, resolution)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n\n}\n\nasync function helperSR(symbol, resolution){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) {\n    return [[\"Please login using the sidebar\"]]\n  }\n  if (!symbol) {\n    return [[\"Symbol cannot be empty\"]]\n  }\n  if (typeof symbol !== 'string') {\n    return [['Symbol has to be a string']]\n  }\n  if (symbol.includes(\",\") || symbol.includes(\";\")) {\n    return [\"Invalid symbol\"]\n  }\n  symbol = symbol.toUpperCase()\n\n  if (!(resolution in valid_resolution)) {\n    return [['Invalid resolution']]\n  }\n  if (resolution in lower_res) {\n    resolution = resolution.toUpperCase()\n  }\n\n  var prepare = {api_key: api_key, symbol: symbol, resolution: resolution, which: 'support_resistance', function_name: 'FS_SupportResistance'}\n\n  const url = link + \"/excel/technical?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    var error = await response.text()\n    try {\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [[\"No data\"]]\n    }\n  }\n  var json = await response.json()\n  if ('message' in json) {\n    return [[json.message]]\n  }\n  var data = json.data\n  // var data_to_return = []\n  // for(var i of data){\n  //   data_to_return.push([i])\n  // }\n  try {\n    return data.length < 1 ? [['No data']] : [data]\n  } catch (e) {\n    return [['No data']]\n  }\n}\n\n/**\n * @customfunction FS_SUPPORTRESISTANCE FS_SupportResistance\n * @param symbol {string} Symbol.\n * @param resolution {string} Resolution.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_SupportResistance(symbol, resolution, invocation) {\n  const  to_return = helperSR(symbol, resolution)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nasync function helperAI(symbol, resolution){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) {\n    return [[\"Please login using the sidebar\"]]\n  }\n  if (!symbol) {\n    return [[\"Symbol cannot be empty\"]]\n  }\n  if (typeof symbol !== 'string') {\n    return [['Symbol has to be a string']]\n  }\n  if (symbol.includes(\",\") || symbol.includes(\";\")) {\n    return [\"Invalid symbol\"]\n  }\n  symbol = symbol.toUpperCase()\n\n  if (!(resolution in valid_resolution)) {\n    return [['Invalid resolution']]\n  }\n  if (resolution in lower_res) {\n    resolution = resolution.toUpperCase()\n  }\n\n  var prepare = {api_key: api_key, symbol: symbol, resolution: resolution, which: 'aggregate_indicators', function_name: 'FS_AggregateIndicators'}\n\n  const url = link + \"/excel/technical?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    var error = await response.text()\n    try {\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [[\"No data\"]]\n    }\n  }\n  var json = await response.json()\n  if ('message' in json) {\n    return [[json.message]]\n  }\n  var data = json.data\n  try{\n\n    return [\n      ['Buy', data.technicalAnalysis.count.buy],\n      ['Neutral', data.technicalAnalysis.count.neutral],\n      ['Sell', data.technicalAnalysis.count.sell],\n      ['Aggregate signal', data.technicalAnalysis.signal],\n      ['ADX reading', data.trend.adx],\n      ['Trending', data.trend.trending.toString()],\n    ]\n  } catch (e) {\n    return [['No data']]\n  }\n}\n\n/**\n * @customfunction FS_AGGREGATEINDICATORS FS_AggregateIndicators\n * @param symbol {string} Symbol.\n * @param resolution {string} Resolution.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_AggregateIndicators(symbol, resolution, invocation) {\n  const  to_return = helperAI(symbol, resolution)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\n\nasync function helperTI(symbol, resolution, indicator, from, to , parameters){\n  var indicator_fields = parameters\n  if(!indicator_fields){indicator_fields = []}\n  if (to == null) { to = undefined }\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if (!symbol) { return [[\"Symbol cannot be empty\"]] }\n  if (typeof symbol !== 'string') { return [['Symbol has to be a string']] }\n  if(symbol.includes(\",\") || symbol.includes(\";\")){return [\"Invalid symbol\"]}\n  symbol = symbol.toUpperCase()\n\n  if (!(resolution in valid_resolution)) { return [['Invalid resolution']] }\n  if (resolution in lower_res) { resolution = resolution.toUpperCase() }\n\n  if (typeof indicator !== 'string') { return [['Indicator has to be a string']] }\n  indicator = indicator.toLowerCase()\n\n  var current_time = Date.parse(new Date()) / 1000\n  //// Check from\n  if(!from){return [[\"'from' cannot be empty\"]]}\n\n  // Handle unix time\n  if(typeof from == 'number' || !isNaN(from)){\n    if(from < 73000){\n      from = (from -25569)*86400\n    }\n    from = Math.round(from)\n  }\n  // Now convert string/Date object or whatever input user gives.\n  else{\n    from = Date.parse(from) / 1000\n    if(isNaN(from) || from < 0) return [[\"Invalid 'from'\"]]\n  }\n\n  //// Check to\n  if(to == '' || to === undefined){\n    to = current_time\n  }\n  // Handle unix time\n  else if(typeof to == 'number' || !isNaN(to)){\n    if(to < 73000){\n      to = (to -25569)*86400\n    }\n    to = Math.round(to)\n  }\n  // Now convert string/Date object or whatever input user gives.\n  else{\n    to = Date.parse(to) / 1000\n    if(isNaN(to) || to < 0) return [[\"Invalid 'to'\"]]\n  }\n  if(to <=from){return [[\"'to' has to be after 'from'\"]]}\n\n  var prepare = {}\n  try{\n    var indicator_fields_dic = {}\n    for(let arr of indicator_fields){\n      indicator_fields_dic[arr[0].toString()] = arr[1].toString()\n    }\n    prepare = { symbol: symbol, resolution: resolution, from: from, to: to, api_key: api_key, indicator: indicator,\n      indicator_fields: JSON.stringify(indicator_fields_dic), which: 'technical_indicators' , function_name: 'FS_TechnicalIndicators'}\n  } catch (e) {\n    return [[\"Invalid parameters\"]]\n  }\n\n  // console.log('prepare', prepare)\n  //// Now send get data\n  const url = link + \"/excel/technical?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    var error = await response.text()\n    try {\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [[\"No data\"]]\n    }\n  }\n\n  var json = await response.json()\n  // console.log(json)\n  if('message' in json){return [[json.message]]}\n  try {\n    var data = json.data\n\n\n    if (!data.c) { return [['No data']] }\n    var standard_columns = {t:1, c:1, o:1, h:1, l:1, v:1, s:1}\n    var new_columns = []\n    var data_to_return = [['Period',  'Open', 'High', 'Low','Close', 'Volume']]\n    for(var key of Object.keys(data)){\n      if(!standard_columns[key]){\n        new_columns.push(key)\n        data_to_return[0].push(capFirst(key))\n      }\n    }\n\n    for(var i=0;i<data.c.length;i++){\n      var arr = [\n        // data.t && data.t[i] ? new Date(data.t[i] * 1000) : '',\n        data.t && data.t[i] ?  data.t[i]   : '',\n        data.o && data.o[i] ? data.o[i] : '',\n        data.h && data.h[i] ? data.h[i] : '',\n        data.l && data.l[i] ? data.l[i] : '',\n        data.c[i] ? data.c[i] : '',\n        data.v && data.v[i] ? data.v[i] : '',\n      ]\n      for(key of new_columns){\n        arr.push(data[key] && data[key][i] !== null && data[key][i] !== undefined ? data[key][i] : '')\n      }\n      data_to_return.push(arr)\n    }\n    if (data_to_return.length < 2) { return [['No data']] }\n    // console.log(data_to_return)\n    return data_to_return\n  } catch (e) {\n    return [['No data']]\n  }\n}\n\n/**\n * @customfunction FS_TECHNICALINDICATORS FS_TechnicalIndicators\n * @param symbol {string} Symbol.\n * @param resolution {string} Resolution.\n * @param indicator {string} Indicator name.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @param [parameters] {any[][]} Indicator fields (optional).\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_TechnicalIndicators(symbol, resolution, indicator, from, to=undefined, parameters=[], invocation) {\n  const  to_return = helperTI(symbol, resolution, indicator, from, to , parameters)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n\n}\n\n\n//// Alternative data\nvar esg_map = {\n  'womenManagementPercentage': 'Women Management Percentage',\n  'adultContent': 'Adult Content',\n  'alcoholic': 'Alcoholic',\n  'animalTesting': 'Animal Testing',\n  'antitrust': 'Antitrust',\n  'asianEmployeePercentage': 'Asian Employee Percentage',\n  'asianManagementPercentage': 'Asian Management Percentage',\n  'blackEmployeePercentage': 'Black Employee Percentage',\n  'blackManagementPercentage': 'Black Management Percentage',\n  'carbonReductionPolicy': 'Carbon Reduction Policy',\n  'catholic': 'Catholic',\n  'climateStrategy': 'Climate Strategy',\n  'co2EmissionScope1': 'Co2 Emission Scope1',\n  'co2EmissionScope2': 'Co2 Emission Scope2',\n  'co2EmissionScope3': 'Co2 Emission Scope3',\n  'co2EmissionTotal': 'Co2 Emission Total',\n  'coalEnergy': 'Coal Energy',\n  'ecofriendlyPackaging': 'Eco-friendly Packaging',\n  'environmentalReporting': 'Environmental Reporting',\n  'firearms': 'Firearms',\n  'fuelEfficiencyConsumption': 'Fuel Efficiency Consumption',\n  'furLeather': 'Fur Leather',\n  'gambling': 'Gambling',\n  'gmo': 'Gmo',\n  'hazardousSubstances': 'Hazardous Substances',\n  'hispanicLatinoEmployeePercentage': 'Hispanic Latino Employee Percentage',\n  'hispanicLatinoManagementPercentage': 'Hispanic Latino Management Percentage',\n  'humanRightsPolicy': 'Human Rights Policy',\n  'militaryContract': 'Military Contract',\n  'nuclear': 'Nuclear',\n  'palmOil': 'Palm Oil',\n  'pesticides': 'Pesticides',\n  'privacyPolicy': 'Privacy Policy',\n  'recallPolicySafety': 'Recall Policy Safety',\n  'recyclingPolicy': 'Recycling Policy',\n  'stakeholderEngagement': 'Stakeholder Engagement',\n  'sustainableForestryPolicy': 'Sustainable Forestry Policy',\n  'tobacco': 'Tobacco',\n  'totalWomenPercentage': 'Total Women Percentage',\n  'waterEfficiencyConsumption': 'Water Efficiency Consumption',\n  'weapons': 'Weapons',\n  'whiteEmployeePercentage': 'White Employee Percentage',\n  'whiteManagementPercentage': 'White Management Percentage',\n  'workplaceHealthSafety': 'Workplace Health Safety',\n  'environmentScore': 'Environment Score',\n  'governanceScore': 'Governance Score',\n  'socialScore': 'Social Score',\n  'totalESGScore': 'Total ESG Score'\n}\n\nasync function helperESG(symbol){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return [[\"Symbol cannot be empty\"]]}\n  if(typeof symbol !== 'string'){return [['Symbol has to be a string']]}\n  symbol = symbol.toUpperCase()\n\n  //// Now get data\n  var prepare = {symbol: symbol, api_key: api_key, function_name: 'FS_ESG'}\n  const url = link + \"/excel/alternative/esg?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n  }\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n  var data_to_return = []\n  for(var key of Object.keys(data)){\n    if(key === 'data'){\n      try {\n        for(var key2 of Object.keys(data[key])){\n          data_to_return.push([capFirst(key2.split(/(?=[A-Z])/).join(' ')), data[key][key2]])\n        }\n      } catch (e) {}\n    } else{\n      if(key === 'symbol'){continue}\n      var name = key === 'totalESGScore' ? 'Total ESG Score' : capFirst(key.split(/(?=[A-Z])/).join(' '))\n      data_to_return.push([name, data[key]])\n    }\n  }\n  return data_to_return.length > 0 ? data_to_return : [['No data']]\n}\n\n/**\n * @customfunction FS_ESG FS_ESG\n * @param symbol {string} Stock symbol.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_ESG(symbol, invocation ){\n  const  to_return = helperESG(symbol )\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nasync function helperEQ(symbol, freq, limit){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return [[\"Symbol cannot be empty\"]]}\n  if(typeof symbol !== 'string'){return [['Symbol has to be a string']]}\n  symbol = symbol.toUpperCase()\n\n  if(typeof freq !== 'string' || !['annual', 'quarterly'].includes(freq.toLowerCase())){return [['Invalid frequency']]}\n\n  if(!limit){limit = 100}\n  if(typeof  limit !== \"number\"){return [['Limit has to be a number']]}\n\n  //// Now get data\n  var prepare = {symbol: symbol, api_key: api_key, freq : freq, function_name: 'FS_EarningsQuality'}\n  const url = link + \"/excel/alternative/earnings_quality?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n  }\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data.data\n  var no_used_name = {period: 1, score: 1, letterScore: 1}\n  var names = {}\n  var store_data = {}\n  var c = 0\n  for(var dic of data){\n    if(!dic.period){continue}\n    c += 1\n    for(var key of Object.keys(dic)){\n      if(!(key in no_used_name)){\n        names[key] = 1\n      }\n      if(key in store_data ){\n        store_data[key].push(dic[key])\n      } else if (!(key in store_data)){\n        store_data[key] = [dic[key]]\n      }\n    }\n    if(c=== limit){break }\n  }\n  if(Object.keys(store_data).length < 1){return [['No data']]}\n  names = ['period'].concat(Object.keys(names)).concat(['score', 'letterScore'])\n  var data_to_return = []\n  for(var name of names){\n    data_to_return.push([capFirst(name.split(/(?=[A-Z])/).join(' '))].concat([].concat(store_data[name]).reverse()))\n  }\n  data_to_return[0][0] = ''\n  return data_to_return.length > 0 ? data_to_return : [['No data']]\n}\n\n/**\n * @customfunction FS_EARNINGSQUALITY FS_EarningsQuality\n * @param symbol {string} Stock symbol.\n * @param freq {string} Frequency (annual or quarterly).\n * @param [limit] {number} Limit.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EarningsQuality(symbol, freq, limit, invocation){\n  const  to_return = helperEQ(symbol, freq, limit)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nasync function helperApi(provider, endpoint, parameters){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if (!provider) { return [[\"Provider name cannot be empty\"]] }\n  if (typeof provider !== 'string') { return [['Provider name to be a string']] }\n  // provider = provider.toLowerCase()\n\n  if (!endpoint) { return [[\"Endpoint name cannot be empty\"]] }\n  if (typeof endpoint !== 'string') { return [['Endpoint name to be a string']] }\n\n  if(!parameters){parameters = []}\n  var input_parameters_dic = {}\n  try{\n    for(let arr of parameters){\n      input_parameters_dic[arr[0].toString()] = arr[1].toString()\n    }\n  } catch (e) {return [['Invalid parameters']]}\n\n  var check_values = checkValidProviderEndpoint(provider, endpoint)\n  if(check_values[2] !== \"\"){return [[check_values[2]]]}\n\n  var base_url = check_values[1], endpoint_dic = check_values[0]\n  var endpoint_url = endpoint_dic.url\n  var return_structure = endpoint_dic.return_is_list ? 'list' : 'dic'\n\n  var params = endpoint_dic.params ? endpoint_dic.params : {}\n  var final_params = {}\n  for(var param of Object.keys(params)){\n    if(params[param].required && !(param in input_parameters_dic)){\n      return [['Missing parameter \"' + param + '\"']]\n    }\n    if(params[param].replace_2dots){ // Handle cases like /prices/:currency_pair/buy\n      endpoint_url = endpoint_url.replace(':' + param, input_parameters_dic[param])\n    } else if(param in input_parameters_dic){\n      var transformInputFunction = params[param].transformInput\n      final_params[param] = transformInputFunction ? transformInputFunction(input_parameters_dic[param]) : input_parameters_dic[param]\n    } else if(params[param].default){\n      final_params[param] = params[param].default.toString()\n    }\n  }\n  // console.log(12, final_params)\n  var prepare = {api_key: api_key, base_url: base_url, endpoint_url: endpoint_url, params: JSON.stringify(final_params), return_structure: return_structure}\n  //// Now send get data\n  const url = link + \"/excel/api?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    var error = await response.text()\n    try {\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [[\"No data\"]]\n    }\n  }\n\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n\n  if (typeof data === 'string' || data instanceof String){return [[data]]}\n\n  try{\n    for(var word of ['err', 'error', 'errors']){\n      if(data[word] && !(typeof data[word] === 'object' && Object.keys(data[word]).length < 1)){\n        return [[JSON.stringify(data[word])]]\n      }\n    }\n  } catch(e){}\n\n  delete data.err; delete data.error; delete data.errors\n  if('data' in data && endpoint_dic.go_down_1_level){data = data.data}\n  else if('result' in data && endpoint_dic.go_down_1_level){data = data.result}\n  if(!data){return [['No data']]}\n\n  // Go up so that the code to treat dic as array work\n  if(endpoint_dic.go_up_1_level){\n    data = {data: data}\n  }\n  // Handle special function\n  if(endpoint_dic.specialHandleFunction){\n    return endpoint_dic.specialHandleFunction(data)\n  }\n\n  var final = [['No data']]\n  // Handle case big returned data is an object\n  if(typeof data === 'object' && data.constructor !== Array){\n    var blocks_of_data = []\n    var max_height = 0\n    for(var key of Object.keys(data)){\n      var used_data = data[key]\n      var res = []\n      // console.log(key)\n\n      if(!used_data){\n        res = [[key], ['']]\n      }\n\n      // Expand row (if is an array or a dic with >15 keys)\n      else if((typeof used_data === 'object' && Object.keys(used_data).length > 15) || used_data.constructor === Array) {\n        // used_data = used_data.slice(0,1)\n        // used_data = {'1CR': used_data['1CR']}\n\n        // If a dict, transform to array to keep things consistent\n        if (used_data.constructor !== Array) {\n          used_data = convertDicToArray(used_data, key)\n        }\n        let pre_store = []\n        for (let key2 of Object.keys(used_data)) {\n          var prefix\n          if(endpoint_dic.go_up_1_level){\n            if(used_data.constructor !== Array){\n              prefix = key2\n            } else {\n              prefix = ''\n            }\n          } else {\n            if(used_data.constructor !== Array){\n              prefix = key + '_' + key2\n            } else {\n              prefix = key\n            }\n          }\n          pre_store.push(handleApiDataExpandColumn(used_data[key2], prefix))\n        }\n\n        // pre_store = flattenArray(pre_store)\n\n        if (used_data.constructor === Array && used_data.length < 1) {\n          pre_store = [[[key, '']]]\n        }\n\n        res = rotateDataAfterExpandRow(pre_store)\n        // console.log(key, data, used_data, pre_store, res)\n\n      }\n      // Expand column\n      else {\n        // If just a value (text or string)\n        if(typeof used_data !== 'object'){\n          res = [[key], [used_data]]\n        }else if( Object.keys(used_data).length < 1 || typeof used_data !== 'object' ){\n          res = [[key], ['']]\n        }\n\n        // Common object\n        else {\n          // // If a dict, transform to array to keep things consistent\n          // if (used_data.constructor !== Array) {\n          //   console.log(234)\n          //   used_data = convertDicToArray(used_data, key)\n          // }\n          var pre_store = [handleApiDataExpandColumn(used_data, key)]\n          res = rotateDataAfterExpandRow(pre_store)\n        }\n        // console.log(key, data[key], used_data, pre_store, res)\n      }\n\n      max_height = Math.max(max_height, res.length)\n      blocks_of_data.push(res)\n    }\n\n    // Fill in missing blocks so that they all have the same height and concat them horizontally\n    var blown_up = []\n    for(var re of blocks_of_data){\n      blown_up.push(blowUpDimension(re, max_height))\n    }\n    final = concatHorizontally(blown_up)\n  }\n\n  // Handle case returned data is an array\n  else if (data.constructor === Array){\n    let pre_store = []\n    for(let key2 of Object.keys(data)){\n      let prefix = ''\n      pre_store.push(handleApiDataExpandColumn(data[key2],prefix))\n    }\n\n    // pre_store = flattenArray(pre_store)\n\n    if(data.length < 1){\n      return [['No data']]\n    }\n\n    final = rotateDataAfterExpandRow(pre_store)\n    // console.log(data, pre_store, final)\n  }\n\n  //If returned data is just text return it\n  else {\n    return [[JSON.stringify(data)]]\n  }\n\n  if(endpoint_dic.transformOutput){try{final = endpoint_dic.transformOutput(final)} catch (e) {}}\n\n  return final\n}\n\n/**\n * @customfunction FS_API FS_Api\n * @param provider {string} Provider name.\n * @param endpoint {string} Endpoint name.\n * @param [parameters] {any[][]} Parameters.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_Api(provider, endpoint, parameters=[], invocation) {\n  const  to_return = helperApi(provider, endpoint, parameters)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nasync function helperBondCandles(isin,   from , to , options){\n  if (to == null) { to = undefined }\n  var symbol = isin\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if (!symbol) { return [[\"ISIN cannot be empty\"]] }\n  if (typeof symbol !== 'string') { return [['ISIN has to be a string']] }\n  symbol = symbol.toUpperCase()\n\n  //// Check from\n  if(!from){return [[\"'from' cannot be empty\"]]}\n\n  // Handle unix time\n  if(typeof from == 'number' || !isNaN(from)){\n    if(from < 73000){\n      from = (from -25569)*86400\n    }\n    from = Math.round(from)\n  }\n  // Now convert string/Date object or whatever input user gives.\n  else{\n    from = Date.parse(from) / 1000\n    if(isNaN(from) || from < 0) return [[\"Invalid 'from'\"]]\n  }\n\n  //// Check to\n  if(to == '' || to === undefined){\n    to = current_time\n  }\n  // Handle unix time\n  else if(typeof to == 'number' || !isNaN(to)){\n    if(to < 73000){\n      to = (to -25569)*86400\n    }\n    to = Math.round(to)\n  }\n  // Now convert string/Date object or whatever input user gives.\n  else{\n    to = Date.parse(to) / 1000\n    if(isNaN(to) || to < 0) return [[\"Invalid 'to'\"]]\n  }\n  if(to <=from){return [[\"'to' has to be after 'from'\"]]}\n  // console.log(from ,to)\n  //// Send and get data\n  var prepare = { ticker: symbol,  from: from, to: to, api_key: api_key, function_name: 'FS_BondCandles'   }\n\n\n  //// Now get data\n  const url = link + \"/excel/bond_candles?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n\n  }\n\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n\n  // Handle options\n  if(!options){options = ''}\n  var is_nh = options.toLowerCase().includes('nh')\n  var is_desc = options.toLowerCase().includes('-')\n  var is_ct = options.toLowerCase().includes('ct')\n\n  var data_to_return = []\n  if (!data.c) { return [['No data']] }\n  if(data.c.constructor === Array){\n    for(var i=0;i<data.c.length;i++){\n      data_to_return.push([\n        data.t && data.t[i] ? ( is_ct ? new Date(data.t[i] * 1000) : data.t[i]): '',\n        data.c[i] ? data.c[i] : '',\n      ])\n    }\n  }\n  if(data_to_return.length <1){return [['No data']]}\n\n  if(is_desc){\n    data_to_return.reverse()\n  }\n\n  if(!is_nh){\n    data_to_return = [['Period',  'Close',  ]].concat(data_to_return)\n  }\n  return data_to_return\n}\n\n/**\n * @customfunction FS_BONDCANDLES FS_BondCandles\n * @param isin {string} ISIN of bind.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @param [options] {string} options (optional).\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_BondCandles(isin,   from= undefined, to = undefined, options = undefined, invocation){\n  const  to_return = helperBondCandles(isin,   from , to , options)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nasync function helperBondTick(isin,   date , limit  , options){\n  var symbol = isin, from = date\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if (!symbol) { return [[\"ISIN cannot be empty\"]] }\n  if (typeof symbol !== 'string') { return [['ISIN has to be a string']] }\n  symbol = symbol.toUpperCase()\n\n\n  //// Check from\n  if(!from){return [[\"'date' cannot be empty\"]]}\n\n  // Handle unix time\n  if(typeof from == 'number' || !isNaN(from)){\n    if(from < 73000){\n      from = (from -25569)*86400\n    }\n    from = Math.round(from)\n  }\n  // Now convert string/Date object or whatever input user gives.\n  else{\n    from = Date.parse(from) / 1000\n    if(isNaN(from) || from < 0) return [[\"Invalid 'date'\"]]\n  }\n   // Convert timestamp to date format to use with Finnhub\n  from = new Date(from * 1000)\n  const offset = from.getTimezoneOffset()\n  from = new Date(from.getTime() - (offset*60*1000))\n  from =  from.toISOString().split('T')[0]\n\n   //// Send and get data\n  if(!limit){limit = 25000}\n  var prepare = { ticker: symbol,   from: from, limit: limit.toString(), api_key: api_key, function_name: 'FS_BondTick'   }\n\n  //// Now get data\n  const url = link + \"/excel/bond_tick?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n\n  }\n\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n\n  // Handle options\n  if(!options){options = ''}\n  var is_nh = options.toLowerCase().includes('nh')\n  var is_desc = options.toLowerCase().includes('-')\n  var is_ct = options.toLowerCase().includes('ct')\n\n  var data_to_return = [ ]\n  if (!data.p) { return [['No data']] }\n  if(data.p.constructor === Array){\n    for(var i=0;i<data.p.length;i++){\n      data_to_return.push([\n        data.t && data.t[i] ? (is_ct ? new Date(data.t[i] ) : parseInt(data.t[i] / 1000)): '',\n        data.p[i] ? data.p[i] : '',\n        data.v && (data.v[i] || data.v[i] == 0) ? data.v[i] : '',\n        data.si && data.si[i] ? (data.si[i].toString() === '1' ? 'Buy' : 'Sell') : '',\n      ])\n    }\n  }\n  if(data_to_return.length <1){return [['No data']]}\n\n  if(is_desc){\n    data_to_return.reverse()\n  }\n\n  if(!is_nh){\n    data_to_return = [['Period',  'Price', 'Volume', 'Side'  ]].concat(data_to_return)\n  }\n  return data_to_return\n}\n\n/**\n * @customfunction FS_BONDTICK FS_BondTick\n * @param isin {string} ISIN of bond.\n * @param date {string} date.\n * @param [limit] {string} limit (optional).\n * @param [options] {string} options (optional).\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_BondTick(isin,   date= undefined, limit = undefined, options = undefined, invocation){\n  const  to_return = helperBondTick(isin,   date , limit  , options)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\n/**\n * @customfunction FS_FUTURESCANDLES FS_FuturesCandles\n * @param symbol {string} Futures Contract Symbol.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @param [metrics] {string} Metrics (optional).\n * @param [options] {string} Options (optional).\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_FuturesCandles(symbol,   from= undefined, to = undefined, metrics=undefined, options=undefined, invocation){\n  const  to_return = candlesHelper(symbol, \"D\", from, to , metrics, options, \"future\" )\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nasync function helperOXD(symbol){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return \"Symbol cannot be empty\"}\n  if(typeof symbol !== 'string'){return 'Symbol has to be a string'}\n  symbol = symbol.toUpperCase()\n\n  //// Send and get data\n  var prepare =  {ticker: symbol,   api_key: api_key, function_name: 'FS_OptionExpirationDates'}\n\n  const url = link + \"/excel/option?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n  }\n\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n\n  var data = json.data\n  // console.log(data)\n  var data_to_return = [ ]\n  if(data.constructor === Array){\n    for(var i=0;i<data.length;i++){\n      var dic = data[i]\n      data_to_return.push([\n        dic.expirationDate\n      ])\n    }\n  }\n\n  if(data_to_return.length <1){return [['No data']]}\n  return data_to_return\n}\n\n/**\n * @customfunction FS_OPTIONEXPIRATIONDATES FS_OptionExpirationDates\n * @param symbol {string} Stock symbol.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_OptionExpirationDates(symbol, invocation ){\n  const  to_return = helperOXD(symbol)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nasync function helperOC(symbol, type, expirationDate, options){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n\n  if(!symbol){return \"Symbol cannot be empty\"}\n  if(typeof symbol !== 'string'){return 'Symbol has to be a string'}\n  symbol = symbol.toUpperCase()\n\n  if(typeof type !== 'string'){return '\"type\" has to be a string'}\n  type = type.toLowerCase()\n  if(type != \"call\" && type != \"put\"){return [['\"type\" has to be call or put']]}\n  if(!expirationDate){return [['\"expirationDate\" cannot be empty']]}\n  if(typeof expirationDate !== 'string'){return [['\"expirationDate\" has to be a string']]}\n  if(!dateIsValid(expirationDate)){return [['Invalid \"expirationDate\"']]}\n  if(!options){options = []}\n\n  // console.log(1, options)\n  var indicator_fields_dic = {}\n  try{\n    for(let arr of options){\n      indicator_fields_dic[arr[0].toString()] = arr[1].toString()\n    }\n  } catch (e) {\n    return [['Invalid \"options\"']]\n  }\n  var metrics = {}\n  var has_header = true\n  if(indicator_fields_dic.header == 'false'){has_header = false}\n  if(indicator_fields_dic.metrics){\n    let temp = indicator_fields_dic.metrics.split('&')\n    if(!temp.includes('all')){\n      for(var metric of temp){\n        if(option_cols.includes(metric)){metrics[metric] = 1}\n      }\n    } else {\n      for(var metric of option_cols){\n        metrics[metric] = 1\n      }\n    }\n  } else {\n    for(var metric of option_cols){\n      metrics[metric] = 1\n    }\n  }\n\n  //// Send and get data\n  var prepare =  {ticker: symbol,   api_key: api_key,   function_name: 'FS_OptionChain' }\n\n  const url = link + \"/excel/option?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n  }\n\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n\n  var data = json.data\n  // console.log(data)\n  var data_to_return = [ ]\n  if(data.constructor === Array){\n    for(var i=0;i<data.length;i++){\n      var temp_dic = data[i]\n      if(temp_dic.expirationDate != expirationDate){continue}\n      var list = temp_dic.options[type.toUpperCase()]\n      for(var dic of list){\n        var arr = []\n        for(var col of option_cols){\n          if(col in metrics){\n            arr.push(dic[col] || dic[col] == 0 ? dic[col] : '')\n          }\n        }\n        data_to_return.push(arr)\n      }\n    }\n  }\n\n  if(data_to_return.length <1){return [['No data']]}\n  if(has_header){\n    var arr = []\n    for(var col of option_cols){\n      if(col in metrics){\n        arr.push(col)\n      }\n    }\n    data_to_return = [arr].concat(data_to_return)\n  }\n  return data_to_return\n}\n\n\n/**\n * @customfunction FS_OPTIONCHAIN FS_OptionChain\n * @param symbol {string} Stock symbol.\n * @param type {string} Type.\n * @param expirationDate {string} Expiration date.\n * @param [options] {any[][]} Options (optional).\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_OptionChain(symbol, type, expirationDate, options=[], invocation ){\n  const  to_return = helperOC(symbol, type, expirationDate, options)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nasync function helperSI(symbol){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return [[\"Symbol cannot be empty\"]]}\n  if(typeof symbol !== 'string'){return [['Symbol has to be a string']]}\n  symbol = symbol.toUpperCase()\n\n  //// Now get data\n  var prepare = {symbol: symbol, api_key: api_key, function_name: 'FS_ShortInterest'}\n  const url = link + \"/excel/short-interest?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n  }\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data.data\n  if(data.status === 'No data'){return [['No data']]}\n  var data_to_return = [['Settlement Date', 'Short Interest', 'Short Ratio', 'Short % of Shares Outstanding']]\n  for(var dic of data){\n    data_to_return.push([dic.settlementDate, dic.shortInterest, dic.shortRatio, dic.shortPercentOutstanding])\n  }\n  return data_to_return\n}\n\n/**\n * @customfunction FS_SHORTINTEREST FS_ShortInterest\n * @param symbol {string} Stock symbol.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_ShortInterest(symbol, invocation ){\n  const  to_return = helperSI(symbol)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nasync function helperET(symbol,   date , limit, skip  , options){\n  var   from = date\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if (!symbol) { return [[\"Symbol cannot be empty\"]] }\n  if (typeof symbol !== 'string') { return [['Symbol has to be a string']] }\n  symbol = symbol.toUpperCase()\n  if(symbol.includes('.') && !(symbol in {'BRK.A': 1, 'BRK.B': 1})){\n    return [[\"We only support US stocks for this function currently.\"]]\n  }\n\n  if (!limit) { return [[\"Limit cannot be empty\"]] }\n\n  if(!skip){\n    skip = \"0\"\n  } else {\n    skip = skip.toString()\n  }\n\n  //// Check from\n  if(!from){return [[\"'date' cannot be empty\"]]}\n\n  // Handle unix time\n  if(typeof from == 'number' || !isNaN(from)){\n    if(from < 73000){\n      from = (from -25569)*86400\n    }\n    from = Math.round(from)\n  }\n  // Now convert string/Date object or whatever input user gives.\n  else{\n    from = Date.parse(from) / 1000\n    if(isNaN(from) || from < 0) return [[\"Invalid 'date'\"]]\n  }\n\n  // Limit to last 10 years\n  if(from * 1000 < Date.now() - 3600 * 24 * 366 * 10 * 1000){\n    return [[\"'date' cannot be more that 10 years ago\"]]\n  }\n\n  // Convert timestamp to date format to use with Finnhub\n  from = new Date(from * 1000)\n  const offset = from.getTimezoneOffset()\n  from = new Date(from.getTime() - (offset*60*1000))\n  from =  from.toISOString().split('T')[0]\n\n  //// Send and get data\n  var prepare = { ticker: symbol,   from: from, limit: limit.toString(), skip: skip.toString(), api_key: api_key,  function_name: 'FS_EquityTick' }\n\n\n  //// Now get data\n  const url = link + \"/excel/equity_tick?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n\n  }\n\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n\n  // Handle options\n  if(!options){options = ''}\n  var is_ct = options.toLowerCase().includes('ct')\n\n  try {\n    var data_to_return = [\n      ['Count',  data.count ? data.count : '', 'Total',  data.total ? data.total : '', ''  ],\n      [\"Venue/Exchange\"\t, \"Timestamp\", \"Price\"\t,\"Volume\",\t\"Trade conditions\"]\n    ]\n    if(!data.p ){return 'No data'}\n    if(data.p.constructor === Array){\n      for(var i=0;i<data.p.length;i++){\n        data_to_return.push([\n          data.x && data.x[i] ? (data.x[i] in map_exchange_tick ? map_exchange_tick[data.x[i]] : data.x[i])  : '',\n          data.t[i] ? ( is_ct ? new Date(data.t[i]) : parseInt(data.t[i]/1000) ): '',\n          data.p && data.p[i] ? data.p[i]  : '',\n          data.v && (data.v[i] || data.v[i] == 0) ? data.v[i] : '',\n          data.c && data.c[i] ? data.c[i].join() : '',\n        ])\n      }\n    }\n\n    if(data_to_return.length <3){return 'No data'}\n    return data_to_return\n  } catch(e){\n    return [['No data']]\n  }\n}\n\n/**\n * @customfunction FS_EQUITYTICK FS_EquityTick\n * @param symbol {string} Stock symbol.\n * @param date {string} date.\n * @param limit {string} limit.\n * @param [skip] {string} skip (optional).\n * @param [options] {string} options (optional).\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EquityTick(symbol,   date , limit, skip = undefined, options = undefined, invocation){\n  const  to_return = helperET(symbol,   date , limit, skip  , options)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nasync function helperEC(from,   to, symbol, international, options ){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n\n  //// Check from\n  if(from ){\n    // Handle unix time\n    if(typeof from == 'number' || !isNaN(from)){\n      var from_string = from.toString()\n      if(from_string.length >= 12) {      // This is miliseconds, divide by 1000\n        from = from / 1000\n      }\n      from = Math.round(from)\n    }\n    // Or convert string/Date object or whatever input user gives.\n    else{\n      from = Date.parse(from) / 1000\n      if(isNaN(from) || from < 0) return \"Invalid 'date'\"\n    }\n\n    // Convert timestamp to date format to use with Finnhub\n    from = new Date(from * 1000)\n    const offset = from.getTimezoneOffset()\n    from = new Date(from.getTime() - (offset*60*1000))\n    from =  from.toISOString().split('T')[0]\n  } else {\n    from = \"\"\n  }\n\n  //// Check to\n  if(to ){\n    // Handle unix time\n    if(typeof to == 'number' || !isNaN(to)){\n      var from_string = to.toString()\n      if(from_string.length >= 12) {      // This is miliseconds, divide by 1000\n        to = to / 1000\n      }\n      to = Math.round(to)\n    }\n    // Or convert string/Date object or whatever input user gives.\n    else{\n      to = Date.parse(to) / 1000\n      if(isNaN(to) || to < 0) return \"Invalid 'date'\"\n    }\n\n    // Convert timestamp to date format to use with Finnhub\n    to = new Date(to * 1000)\n    const offset = to.getTimezoneOffset()\n    to = new Date(to.getTime() - (offset*60*1000))\n    to =  to.toISOString().split('T')[0]\n  } else {\n    to = \"\"\n  }\n\n  if(!symbol){symbol = \"\"}\n\n  //// Send and get data\n  var   prepare =  {ticker: symbol,  from: from, to: to, api_key: api_key,  international: international,  function_name: 'FS_EarningsCalendar' }\n\n\n\n  //// Now get data\n  const url = link + \"/excel/earningscalendar?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n\n  }\n\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n\n  data = data.earningsCalendar\n  if(!options){options = ''}\n  var is_nh = options.toString().toUpperCase().includes('NH')\n  var data_to_return = is_nh ? [] : [['Date',  'Hour', 'Symbol', 'Revenue Actual' , 'Revenue Estimate', 'EPS Actual', 'EPS Estimate', 'Reporting period' ]]\n  var map_hour ={bmo: 'Before Market Open', amc: 'After Market Close', dmh: 'During Market Hour'}\n  for(var dic of data){\n    data_to_return.push([\n      dic.date,\n      dic.hour in map_hour ? map_hour[dic.hour] : dic.hour,\n      dic.symbol,\n      dic.revenueActual ? dic.revenueActual : '',\n      dic.revenueEstimate ? dic.revenueEstimate : '',\n      dic.epsActual ? dic.epsActual : '',\n      dic.epsEstimate ? dic.epsEstimate : '',\n      'Q' + dic.quarter + '/' + dic.year\n\n    ])\n  }\n  if(is_nh && data_to_return.length < 1) { return [['No data']] }\n  if (!is_nh && data_to_return.length < 2) { return [['No data']] }\n  return data_to_return\n}\n\n/**\n * @customfunction FS_EARNINGSCALENDAR FS_EarningsCalendar\n * @param [from] {string} from date (optional).\n * @param [to] {string} to date (optional).\n * @param [symbol] {string} stock symbol (optional).\n * @param [international] {string} specify \"true\" to include international markets (optional).\n * @param [options] {string} set to \"NH\" to omit the header row.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EarningsCalendar(from,   to, symbol, international , options, invocation ){\n  const  to_return = helperEC(from,   to, symbol, international, options )\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\n\n\nasync function helperIP(guru){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!guru){return [['Guru name cannot be empty']]}\n  if(!(guru.toLowerCase() in reversed_map_url_guru)){return [['This guru/institution is not currently supported']]}\n\n  //// Send and get data\n  var prepare =  {guru: guru, is_gs: \"y\" , api_key: api_key, function_name: 'FS_InstitutionalPortfolios'}\n\n  //// Now get data\n  const url = link + \"/excel/institutional-holding?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n\n  }\n\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n\n  try {\n    var data_to_return = []\n    for(var dic of data){\n      if(dic.ticker && dic.ticker !== '--'){\n        data_to_return.push([\n          dic.ticker\n        ])\n      }\n\n    }\n\n    if(data_to_return.length <1){return [['No data']]}\n    return data_to_return\n  } catch(e){\n    return [['No data']]\n  }\n}\n\n\n/**\n * @customfunction FS_INSTITUTIONALPORTFOLIOS FS_InstitutionalPortfolios\n * @param guru {string} Guru/institution name.\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_InstitutionalPortfolios(guru , invocation){\n  const  to_return = helperIP(guru)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\n\nasync function helperDividends(symbol, from, to ,metrics, options){\n  // console.log(13)\n  var api_key = readCookie(\"finsheet_api_key\");\n  if(!api_key){return [[\"Please login using the sidebar\"]]}\n\n  if(!symbol){return [['symbol cannot be empty']]}\n  if(!from){return [['from cannot be empty']]}\n  if(!to){return [['to cannot be empty']]}\n\n  // console.log(1)\n  //// Check from\n  if(from ){\n    // Handle unix time\n    if(typeof from == 'number' || !isNaN(from)){\n      var from_string = from.toString()\n      if(from_string.length >= 12) {      // This is miliseconds, divide by 1000\n        from = from / 1000\n      }\n      from = Math.round(from)\n    }\n    // Or convert string/Date object or whatever input user gives.\n    else{\n      from = Date.parse(from) / 1000\n      if(isNaN(from) || from < 0) return \"Invalid 'date'\"\n    }\n\n    // Convert timestamp to date format to use with Finnhub\n    from = new Date(from * 1000)\n    const offset = from.getTimezoneOffset()\n    from = new Date(from.getTime() - (offset*60*1000))\n    from =  from.toISOString().split('T')[0]\n  } else {\n    from = \"\"\n  }\n  // console.log(2)\n  //// Check to\n  if(to ){\n    // Handle unix time\n    if(typeof to == 'number' || !isNaN(to)){\n      var from_string = to.toString()\n      if(from_string.length >= 12) {      // This is miliseconds, divide by 1000\n        to = to / 1000\n      }\n      to = Math.round(to)\n    }\n    // Or convert string/Date object or whatever input user gives.\n    else{\n      to = Date.parse(to) / 1000\n      if(isNaN(to) || to < 0) return \"Invalid 'date'\"\n    }\n\n    // Convert timestamp to date format to use with Finnhub\n    to = new Date(to * 1000)\n    const offset = to.getTimezoneOffset()\n    to = new Date(to.getTime() - (offset*60*1000))\n    to =  to.toISOString().split('T')[0]\n  } else {\n    to = \"\"\n  }\n\n  //// Send and get data\n  var prepare =  {ticker: symbol,  from: from, to: to, api_key: api_key,   function_name: 'FS_Dividends'}\n  // console.log(12, prepare)\n  //// Now get data\n  const url = link + \"/excel/dividend?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    try{\n      var error = await response.text()\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [['No data']]\n    }\n\n  }\n\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n\n  // Handle options\n  if(!options){options = ''}\n  var is_nh = options.toLowerCase().includes('nh')\n  var is_desc = options.toLowerCase().includes('-')\n\n  // Handle metrics / columns\n  var headers = []\n  var map_col_name = {'declarationDate': 1,  'recordDate': 1, 'payDate': 1,'amount': 1, 'adjustedAmount': 1,'currency': 1}\n  if(!metrics || metrics == \"all\" || metrics == \"All\" || metrics == 'ALL'){headers = ['declarationDate',  'recordDate', 'payDate','amount', 'adjustedAmount','currency',]}\n  else {\n    var arr_metrics = metrics.split('&')\n    for(var elem of arr_metrics){\n      var reformat = elem\n      if(reformat in map_col_name){\n        headers.push(reformat)\n      }\n    }\n  }\n\n  var data_to_return = []\n  for(var i=0;i<data.length;i++){\n    var dic = data[i]\n    var one_row = []\n    for(var elem of headers){\n      one_row.push(dic[elem] ? dic[elem] : '')\n    }\n    data_to_return.push(one_row)\n\n  }\n\n  if(data_to_return.length < 1){return [['No data']]}\n\n  if(is_desc){\n    data_to_return.reverse()\n  }\n\n  if(!is_nh){\n    data_to_return = [headers].concat(data_to_return)\n  }\n  return data_to_return\n}\n\n/**\n * @customfunction FS_DIVIDENDS FS_Dividends\n * @param symbol {string} Stock symbol.\n * @param from {string} from.\n * @param to {string} to.\n * @param [metrics] {string} metrics (optional).\n * @param [options] {string} options (optional).\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_Dividends(symbol, from, to ,metrics, options , invocation){\n  const  to_return = helperDividends(symbol, from, to ,metrics, options)\n  await check_whether_reach_limit(await to_return, invocation.address)\n  return to_return\n}\nCustomFunctions.associate(\"FS_TEST\", FS_Test);\nCustomFunctions.associate(\"FS_EQUITYMETRICS\", FS_EquityMetrics);\nCustomFunctions.associate(\"FS_EQUITYFULLFINANCIALS\", FS_EquityFullFinancials);\nCustomFunctions.associate(\"FS_EQUITYCANDLES\", FS_EquityCandles);\nCustomFunctions.associate(\"FS_FOREXCANDLES\", FS_ForexCandles);\nCustomFunctions.associate(\"FS_CRYPTOCANDLES\", FS_CryptoCandles);\nCustomFunctions.associate(\"FS_ETFCANDLES\", FS_EtfCandles);\nCustomFunctions.associate(\"FS_MUTUALFUNDCANDLES\", FS_MutualFundCandles);\nCustomFunctions.associate(\"FS_FOREXALLRATES\", FS_ForexAllRates);\nCustomFunctions.associate(\"FS_CRYPTOPROFILE\", FS_CryptoProfile);\nCustomFunctions.associate(\"FS_ETFPROFILE\", FS_EtfProfile);\nCustomFunctions.associate(\"FS_MUTUALFUNDPROFILE\", FS_MutualFundProfile);\nCustomFunctions.associate(\"FS_ETFHOLDINGS\", FS_EtfHoldings);\nCustomFunctions.associate(\"FS_MUTUALFUNDHOLDINGS\", FS_MutualFundHoldings);\nCustomFunctions.associate(\"FS_LATEST\", FS_Latest);\nCustomFunctions.associate(\"FS_STREAMING\", FS_Streaming);\nCustomFunctions.associate(\"FS_PATTERNRECOGNITION\", FS_PatternRecognition);\nCustomFunctions.associate(\"FS_SUPPORTRESISTANCE\", FS_SupportResistance);\nCustomFunctions.associate(\"FS_AGGREGATEINDICATORS\", FS_AggregateIndicators);\nCustomFunctions.associate(\"FS_TECHNICALINDICATORS\", FS_TechnicalIndicators);\nCustomFunctions.associate(\"FS_ESG\", FS_ESG);\nCustomFunctions.associate(\"FS_EARNINGSQUALITY\", FS_EarningsQuality);\nCustomFunctions.associate(\"FS_API\", FS_Api);\nCustomFunctions.associate(\"FS_BONDCANDLES\", FS_BondCandles);\nCustomFunctions.associate(\"FS_BONDTICK\", FS_BondTick);\nCustomFunctions.associate(\"FS_FUTURESCANDLES\", FS_FuturesCandles);\nCustomFunctions.associate(\"FS_OPTIONEXPIRATIONDATES\", FS_OptionExpirationDates);\nCustomFunctions.associate(\"FS_OPTIONCHAIN\", FS_OptionChain);\nCustomFunctions.associate(\"FS_SHORTINTEREST\", FS_ShortInterest);\nCustomFunctions.associate(\"FS_EQUITYTICK\", FS_EquityTick);\nCustomFunctions.associate(\"FS_EARNINGSCALENDAR\", FS_EarningsCalendar);\nCustomFunctions.associate(\"FS_INSTITUTIONALPORTFOLIOS\", FS_InstitutionalPortfolios);\nCustomFunctions.associate(\"FS_DIVIDENDS\", FS_Dividends);"],"names":["capFirst","string","charAt","toUpperCase","slice","equityHelper","symbol","metric","period","undefined","limit","options","sub_options","api_key","readCookie","freq","ticker","Array","isArray","length","unique_tickers","includes","sub_arr","tick","Object","keys","toLowerCase","map_excel_name_to_id","id","is_full_statement","map_metrics","default_freq","supported_freq","isValidFreq_returnCleanString","is_nh","indexOf","only_get_latest_when_limit_larger_1","prepare","metric_full_info","field_code","generate_query","toString","is_share","urlParams","function_name","url","link","URLSearchParams","fetch","method","body","JSON","stringify","response","ok","text","error","parse","json","message","handle_receive_AR_EQUITY","data","invocation","to_return","check_whether_reach_limit","address","statement","valid_resolution","lower_res","properties","candlesHelper","resolution","from","to","metrics","which","current_time","Date","isNaN","Math","round","to_equal_from","resolution_map_to_seconds","is_desc","is_ct","headers","map_col_name","arr_metrics","split","elem","reformat","push","data_to_return","c","constructor","i","one_row","t","o","h","l","v","reverse","concat","helperAllRate","base_currency","key","map_name_crypto_profile","helperCryptoProfile","map_name_etf_profile","helperEtfProfile","profile","map_name_mutual_fund_profile","helperMutualFundProfile","holdingsHelper","skip","atDate","holdings","dic","arr","map_name_holdings","helperLatest","connect","first_symbol","window","socket","WebSocket","onopen","console","log","send","can_call_streaming","onmessage","e","Should_Update_Streaming","s","OldBigSymbolPriceMap","BigSymbolPriceMap","p","onclose","setTimeout","code","have_not_reconnect_websocket","onerror","err","close","Excel","run","context","have_not_set_interval_change_color","setInterval","active_sheet","workbook","worksheets","getActiveWorksheet","range","getUsedRange","load","sync","then","sheet_id","address_portion","starting_row","starting_col","colnameToNumber","parseInt","green_cell","red_cell","formulas","values","j","current_formula","startsWith","used_key","EachCellStreamingValue","cell_text","col_name","getExcelColName","green_area","getRanges","format","font","color","readyState","OPEN","msg","type","timer","result","setResult","onCanceled","clearInterval","helperPR","max_len","patternname","one_result","number_to_add","final","temp","helperSR","helperAI","technicalAnalysis","count","buy","neutral","sell","signal","trend","adx","trending","helperTI","indicator","parameters","indicator_fields","indicator_fields_dic","standard_columns","new_columns","helperESG","key2","join","name","helperEQ","no_used_name","score","letterScore","names","store_data","helperApi","provider","endpoint","input_parameters_dic","check_values","checkValidProviderEndpoint","base_url","endpoint_dic","endpoint_url","return_structure","return_is_list","params","final_params","param","required","replace_2dots","replace","transformInputFunction","transformInput","default","String","word","errors","go_down_1_level","go_up_1_level","specialHandleFunction","blocks_of_data","max_height","used_data","res","convertDicToArray","pre_store","prefix","handleApiDataExpandColumn","rotateDataAfterExpandRow","max","blown_up","re","blowUpDimension","concatHorizontally","transformOutput","helperBondCandles","isin","helperBondTick","date","offset","getTimezoneOffset","getTime","toISOString","si","helperOXD","expirationDate","helperOC","dateIsValid","has_header","header","option_cols","temp_dic","list","col","helperSI","status","settlementDate","shortInterest","shortRatio","shortPercentOutstanding","helperET","now","total","x","map_exchange_tick","helperEC","international","earningsCalendar","map_hour","bmo","amc","dmh","hour","revenueActual","revenueEstimate","epsActual","epsEstimate","quarter","year","helperIP","guru","reversed_map_url_guru","is_gs","helperDividends","have_not_add_on_calculated_trigger","Cells_to_refresh","Sheet_to_refresh","have_not_start_refresh_limit_reach","CustomFunctions","associate","FS_EquityMetrics","FS_EquityFullFinancials","FS_EquityCandles","FS_ForexCandles","FS_CryptoCandles","FS_EtfCandles","FS_MutualFundCandles","FS_CryptoProfile","FS_EtfProfile","FS_MutualFundProfile","FS_EtfHoldings","FS_MutualFundHoldings","FS_Latest","FS_Streaming","FS_PatternRecognition","FS_SupportResistance","FS_AggregateIndicators","FS_TechnicalIndicators","FS_ESG","FS_EarningsQuality","FS_Api","FS_OptionExpirationDates","FS_OptionChain","FS_ShortInterest","FS_EquityTick","FS_EarningsCalendar","FS_InstitutionalPortfolios","FS_Dividends"],"sourceRoot":""}