{"version":3,"file":"functions.js","mappings":"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","sources":["webpack:///./src/functions/functions.js?"],"sourcesContent":["async function equityHelper(symbol, metric, period = undefined, limit = undefined) {\n  // return [[\"Please login using the sidebar\"]];\n  // console.log(123)\n  if (period == null) { period = undefined}\n  if (limit == null) { limit = undefined }\n  var api_key = readCookie(\"finsheet_api_key\");\n  // console.log(api_key)\n  var freq = period;\n  var ticker = symbol;\n\n  if (!api_key) {\n    return [[\"Please login using the sidebar\"]];\n  }\n\n  if (!ticker) {\n    return [[\"Symbol cannot be empty\"]];\n  }\n  if (typeof ticker !== \"string\") {\n    return [[\"Symbol has to be a string\"]];\n  }\n  ticker = ticker.toUpperCase();\n  if (!metric) {\n    return [[\"Metric cannot be empty\"]];\n  }\n  metric = metric.toLowerCase();\n  if (!(metric in map_excel_name_to_id) && ![\"bs\", \"cf\", \"ic\"].includes(metric)) {\n    return [[\"Unsupported metric\"]];\n  }\n  if (freq === \"\") {\n    freq = undefined;\n  }\n\n  if (typeof freq !== \"string\" && typeof freq !== \"undefined\") {\n    return [[\"Period has to be a string\"]];\n  }\n  if (limit === \"\") {\n    limit = undefined;\n  }\n  if (typeof limit !== \"number\" && typeof limit !== \"undefined\") {\n    return [[\"Limit has to be a positive interger\"]];\n  }\n  if (typeof limit !== \"undefined\" && limit <= 0) {\n    return [[\"Limit has to be a positive interger\"]];\n  }\n  ////// Check if frequency is valid\n  var id = metric in map_excel_name_to_id ? map_excel_name_to_id[metric] : metric;\n  var is_full_statement = [\"bs\", \"cf\", \"ic\"].includes(id);\n\n  // First if the freq is undefined and this metric has default freq, set to default\n  if (freq === undefined && (is_full_statement || map_metrics[id].default_freq)) {\n    if ([ \"cf\", \"ic\"].includes(id)) {\n      freq = \"TTM\";\n    } else if(id === 'bs'){\n      freq = \"Q\"\n    } else {\n      freq = map_metrics[id].default_freq;\n    }\n  }\n  // Next if user submit a freq but this metric has no freq (like price, share count...), then report error\n  else if (!is_full_statement && !map_metrics[id].default_freq && freq !== undefined) {\n    return [[\"This metric does not support periods\"]];\n  }\n\n  // Now check whether the freq users enter is valid or not\n  else if (freq !== undefined) {\n    freq = freq.toUpperCase();\n\n    if ([\"bs\", \"ic\"].includes(id) && freq.includes(\"YTD\")) {\n      return [[\"Period YTD is only available for cf\"]];\n    }\n    if (id === \"bs\" && freq.includes(\"TTM\")) {\n      return [[\"Period TTM is only available for ic and cf\"]];\n    }\n\n    if (is_full_statement) {\n      var supported_freq = id === \"cf\" ? [\"FY\", \"TTM\", \"Q\", \"YTD\"] : id === \"bs\" ? [\"FY\", \"Q\"] : [\"FY\", \"TTM\", \"Q\"];\n      freq = isValidFreq_returnCleanString(freq, supported_freq, \"TTM\", id);\n    } else if (map_metrics[id].default_freq) {\n      freq = isValidFreq_returnCleanString(freq, map_metrics[id].supported_freq, map_metrics[id].default_freq, id);\n    } else {\n      freq = false;\n    }\n    if (freq === false) {\n      return [[\"Invalid period\"]];\n    }\n  }\n  ///// Combine limit with freq to become series freq if applicable\n  if (!is_full_statement && [\"TTM\", \"FY\", \"Q\", \"YTD\"].includes(freq) && limit && limit > 1) {\n    freq += \"@\" + limit;\n  }\n  /// If not applicable, set limit = undefined (avoid getting useless output from Go and make it convenient to process data later)\n  else if (!is_full_statement) {\n    limit = undefined;\n  }\n  //// Prepare stuff to send to Go\n  var prepare = {};\n  if (!is_full_statement) {\n    var metric_full_info = { field_code: id };\n    if (freq !== \"-1\" && freq !== \"\" && freq !== undefined) {\n      metric_full_info[\"period\"] = freq;\n    }\n    prepare = generate_query(\n        1,\n        \"watchlist\",\n        [],\n        [metric_full_info],\n        [],\n        [\"\", \"\"],\n        ticker,\n        [metric_full_info],\n        [ticker]\n    );\n  }\n  prepare = { ...prepare, ...{ ticker: ticker, metric: id, freq: freq, api_key: api_key, limit: limit } };\n  if (id == 206) {\n    prepare[\"is_latest_price\"] = \"1\";\n  }\n  //// Now get data\n  const url = link + \"/excel/standard?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  return handle_receive_AR_EQUITY(json, is_full_statement, id);\n}\n\n/**\n * @customfunction FS_EQUITYMETRICS FS_EquityMetrics\n * @param symbol {string} Stock Symbol.\n * @param metric {string} Metric.\n * @param [period] {string} Period (optional).\n * @param [limit] {number} Limit (optional, default to 1).\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EquityMetrics(symbol, metric, period = undefined, limit = undefined){\n  if(!metric){return [[\"Metric cannot be empty\"]]}\n  metric = metric.toLowerCase()\n  if(!(metric in map_excel_name_to_id) ){return [[\"Unsupported metric\"]]}\n  return equityHelper(symbol, metric, period , limit )\n}\n\n/**\n * @customfunction FS_EQUITYFULLFINANCIALS FS_EquityFullFinancials\n * @param symbol {string} Stock Symbol.\n * @param statement {string} Statement (bs, ic or cf).\n * @param [period] {string} Period (optional).\n * @param [limit] {number} Limit (optional, default to 1).\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EquityFullFinancials(symbol, statement, period = undefined, limit = undefined){\n  var metric = statement\n  if(!metric){return [[\"Metric cannot be empty\"]]}\n  metric = metric.toLowerCase()\n  if(!['bs', 'cf', 'ic'].includes(metric) ){return [[\"Unsupported metric\"]]}\n  return equityHelper(symbol, metric, period , limit )\n}\n\n\nvar valid_resolution = {\n  '1':1, '5':1, '15':1, '30':1, '60':1,\n  'D': 1, 'W': 1, 'M': 1, 'd': 1, 'w': 1, 'm': 1\n}\nvar lower_res = { 'd': 1, 'w': 1, 'm': 1 }\nvar properties = [\"close\", \"open\", \"high\", \"low\", \"volume\"]\n\n\n\nasync function candlesHelper(symbol, resolution, from, to = undefined, which=\"stock\" ) {\n  if (to == null) { to = undefined }\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if (!symbol) { return [[\"Symbol cannot be empty\"]] }\n  if (typeof symbol !== 'string') { return [['Symbol has to be a string']] }\n  symbol = symbol.toUpperCase()\n\n  if (!(resolution in valid_resolution)) { return [['Invalid resolution']] }\n  if (resolution in lower_res) { resolution = resolution.toUpperCase() }\n\n  //// Check from\n  if(!from){return [[\"'from' cannot be empty\"]]}\n  // Handle unix time\n  if(typeof from == 'number' || !isNaN(from)){\n    from = Math.round(from)\n  }\n  // Now convert string/Date object or whatever input user gives.\n  else{\n    from = Date.parse(from) / 1000\n    if(isNaN(from) || from < 0) return [[\"Invalid 'from'\"]]\n  }\n\n  //// Check to\n  if(to == '' || to === undefined){\n    to = Date.parse(new Date()) / 1000\n  }\n  // Handle unix time\n  else if(typeof to == 'number' || !isNaN(to)){\n    to = Math.round(to)\n  }\n  // Now convert string/Date object or whatever input user gives.\n  else{\n    to = Date.parse(to) / 1000\n    if(isNaN(to) || to < 0) return [[\"Invalid 'to'\"]]\n  }\n  if(to <=from){return [[\"'to' cannot be before 'from'\"]]}\n\n  //// Send and get data\n  var prepare = { ticker: symbol, resolution: resolution, from: from, to: to, api_key: api_key, properties: JSON.stringify(properties) , which: which}\n\n\n  //// Now get data\n  const url = link + \"/excel/candles?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n\n  var data_to_return = [['Period', 'Close', 'Open', 'High', 'Low', 'Volume']]\n  if (!data.c) { return [['No data']] }\n  for (var i = 0; i < data.c.length; i++) {\n    data_to_return.push([new Date(data.t[i] * 1000), data.c[i], data.o[i], data.h[i], data.l[i], data.v[i]])\n  }\n  if (data_to_return.length < 2) { return [['No data']] }\n  return data_to_return\n}\n\n/**\n * @customfunction FS_EQUITYCANDLES FS_EquityCandles\n * @param symbol {string} Stock Symbol.\n * @param resolution {string} Resolution.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EquityCandles(symbol, resolution, from, to = undefined, ){\n  return candlesHelper(symbol, resolution, from, to , \"stock\" )\n}\n\n/**\n * @customfunction FS_FOREXCANDLES FS_ForexCandles\n * @param symbol {string} Forex Symbol.\n * @param resolution {string} Resolution.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_ForexCandles(symbol, resolution, from, to = undefined, ){\n  return candlesHelper(symbol, resolution, from, to , \"forex\" )\n}\n\n/**\n * @customfunction FS_CRYPTOCANDLES FS_CryptoCandles\n * @param symbol {string} Crypto Symbol.\n * @param resolution {string} Resolution.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_CryptoCandles(symbol, resolution, from, to = undefined, ){\n  return candlesHelper(symbol, resolution, from, to , \"crypto\" )\n}\n\n/**\n * @customfunction FS_ETFCANDLES FS_EtfCandles\n * @param symbol {string} Etf Symbol.\n * @param resolution {string} Resolution.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EtfCandles(symbol, resolution, from, to = undefined, ){\n  return candlesHelper(symbol, resolution, from, to , \"etf\" )\n}\n\n/**\n * @customfunction FS_FOREXALLRATES FS_ForexAllRates\n * @param [base_currency] {string} base_currency (optional).\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_ForexAllRates(base_currency=\"USD\", ){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n\n  //// Now get data\n  var prepare = {base_currency: base_currency, api_key: api_key}\n  const url = link + \"/excel/forex_all_rates?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n  var data_to_return = []\n  for(var key of Object.keys(data)){\n    data_to_return.push([key, data[key]])\n  }\n  return data_to_return\n}\n\nvar map_name_crypto_profile = {\n  \"name\": \"Name\",\n  \"longName\": \"Full Name\",\n  \"description\": \"Description\",\n  \"marketCap\": \"Market Capitalization\",\n  \"totalSupply\": \"Total Supply\",\n  \"maxSupply\": \"Max Supply\",\n  \"circulatingSupply\": \"Circulating Supply\",\n  \"launchDate\": \"Launch Date\",\n  \"website\": \"Website\",\n  \"proofType\": \"Proof Type\"\n}\n\n/**\n * @customfunction FS_CRYPTOPROFILE FS_CryptoProfile\n * @param symbol {string} Crypto symbol such as BTC or ETH.\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_CryptoProfile(symbol, ){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return [[\"Symbol cannot be empty\"]]}\n  if(typeof symbol !== 'string'){return [['Symbol has to be a string']]}\n  if(symbol.includes(':')){return [['Invalid symbol, make sure it does not include exchange name']]}\n  symbol = symbol.toUpperCase()\n\n  //// Now get data\n  var prepare = {symbol: symbol, api_key: api_key, which: \"crypto_profile\"}\n  const url = link + \"/excel/asset_profile?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n  var data_to_return = []\n  for(var key of Object.keys(map_name_crypto_profile)){\n    if(data[key]){\n      data_to_return.push([map_name_crypto_profile[key], data[key]])\n    }\n  }\n  return data_to_return\n}\n\n\nvar map_name_etf_profile = {\n  \"assetClass\": \"Equity\",\n  \"aum\": \"AUM\",\n  \"avgVolume\": \"Avg Volume\",\n  \"cusip\": \"CUSIP\",\n  \"description\": \"Description\",\n  \"domicile\": \"Domicile\",\n  \"etfCompany\": \"ETF Issuer\",\n  \"expenseRatio\": \"Expense Ratio\",\n  \"inceptionDate\": \"Inception Date\",\n  \"investmentSegment\": \"Investment Segment\",\n  \"isin\": \"ISIN\",\n  \"name\": \"Name\",\n  \"nav\": \"NAV\",\n  \"navCurrency\": \"NAV Currency\",\n  \"priceToBook\": \"P/B\",\n  \"priceToEarnings\": \"P/E\",\n  \"trackingIndex\": \"Tracking Index\",\n  \"website\": \"Website\"\n}\n/**\n * @customfunction FS_ETFPROFILE FS_EtfProfile\n * @param symbol {string} ETF symbol.\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EtfProfile(symbol, ){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return [[\"Symbol cannot be empty\"]]}\n  if(typeof symbol !== 'string'){return [['Symbol has to be a string']]}\n  symbol = symbol.toUpperCase()\n\n  //// Now get data\n  var prepare = {symbol: symbol, api_key: api_key, which: \"etf_profile\"}\n  const url = link + \"/excel/asset_profile?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n  var json = await response.json()\n  // console.log(json)\n  if('message' in json){return [[json.message]]}\n  var data = json.data.profile\n  var data_to_return = []\n  if(json.data.symbol){data_to_return = [['Symbol', json.data.symbol]]}\n  for(var key of Object.keys(map_name_etf_profile)){\n    if(data[key]){\n      data_to_return.push([map_name_etf_profile[key], data[key]])\n    }\n  }\n  return data_to_return\n}\n\n\n\n\n\n////// Websocket\n\n\nfunction connect(first_symbol) {\n  window.socket = new WebSocket('wss://' + link.slice(8,) + '/ws')\n\n  window.socket.onopen = function() {\n    console.log('Socket open')\n    if(first_symbol){\n      window.socket.send(JSON.stringify({symbol: first_symbol, \"type\": \"subscribe\",}))\n    }\n  };\n\n  window.socket.onmessage = function(e) {\n    if(window.Should_Update_Streaming){   // Whether user chooses to pause or not pause streaming\n      var data = JSON.parse(e.data)\n      var symbol = data.data[0].s\n      window.OldBigSymbolPriceMap[symbol] = window.BigSymbolPriceMap[symbol]\n      window.BigSymbolPriceMap[symbol] = data.data[0].p\n    }\n  };\n\n  window.socket.onclose = function(e) {\n    console.log('Socket is closed. Reconnect will be attempted in 1 second.', e.reason);\n    setTimeout(function() {\n      window.have_not_reconnect_websocket = false\n      connect();\n    }, 1000);\n  };\n\n  window.socket.onerror = function(err) {\n    console.error('Socket encountered error: ', err.message, 'Closing socket');\n    window.socket.close();\n  };\n}\n\nwindow.OldBigSymbolPriceMap = {}\nwindow.BigSymbolPriceMap = {}\n// window.OldEachCellStreamingValue = {}\nwindow.EachCellStreamingValue = {}\n\nwindow.Should_Update_Streaming = true\nwindow.have_not_reconnect_websocket = true\nwindow.have_not_add_on_calculated_trigger = true\nwindow.have_not_set_interval_change_color = true\n\nconnect()\n\n/**\n * Stream Real-time price for Stocks, Forex, Cryptos and ETFs.\n * @customfunction FS_STREAMING Fs_Streaming\n * @param symbol {string}  Symbol.\n * @param {CustomFunctions.StreamingInvocation<string>} invocation * ...\n */\nasync function Fs_Streaming(symbol, invocation ){\n  Excel.run(async (context) => {\n    if(window.have_not_set_interval_change_color){\n      window.have_not_set_interval_change_color = false\n      setInterval(async () => {\n        if(!window.Should_Update_Streaming){return}\n        var active_sheet = context.workbook.worksheets.getActiveWorksheet();\n        var range = active_sheet.getUsedRange(true);\n        range.load(\"formulas\");\n        range.load(\"address\");\n        range.load(\"values\");\n\n        await context.sync()\n            .then(async function () {\n              var sheet_id = active_sheet.id\n\n              var address_portion = range.address.split('!')[1].split(':')[0]\n              var starting_row = 0, starting_col = 0\n              for(var i=0; i<address_portion.length; i++){\n                if(!isNaN(address_portion[i])){\n                  starting_col = colnameToNumber(address_portion.slice(0,i)) - 1\n                  starting_row = parseInt(address_portion.slice(i,)) -1\n                  break\n                }\n              }\n\n\n\n\n              var green_cell = []\n              var red_cell = []\n              var formulas = range.formulas\n              var values = range.values\n              for(var i=0;i<formulas.length; i++){\n                for(var j=0;j<formulas[0].length; j++ ){\n                  var current_formula = formulas[i][j]\n                  if(current_formula.toLowerCase().startsWith('=fs_streaming(')){\n                    var arr = current_formula.split('\"')\n                    // This one handle when formula is direct like FS_Streaming(\"AAPL\")\n                    if(arr.length === 3){\n                      var symbol = arr[1]\n                      if(window.BigSymbolPriceMap[symbol] && window.OldBigSymbolPriceMap[symbol]){\n                        if(window.BigSymbolPriceMap[symbol] > window.OldBigSymbolPriceMap[symbol]){\n                          green_cell.push([starting_row + i, starting_col + j])\n                        } else if(window.BigSymbolPriceMap[symbol] < window.OldBigSymbolPriceMap[symbol]){\n                          red_cell.push([starting_row + i, starting_col + j])\n                        }\n                        // // After updating color once, set they equal each other so that no more color change while waiting for new websocket message\n                        // window.OldBigSymbolPriceMap[symbol] = window.BigSymbolPriceMap[symbol]\n                      }\n                    }\n\n                    // This one handle when formula refers to another cell (save data to global dict, compare before and after\n                    else {\n                      var used_key = sheet_id + '@@' + (starting_row + i) + '@@' + (starting_col + j)\n                      if(window.EachCellStreamingValue[used_key] && values[i][j]){\n                        if(values[i][j] > window.EachCellStreamingValue[used_key] ){\n                          green_cell.push([starting_row + i, starting_col + j])\n                        } else if(values[i][j] < window.EachCellStreamingValue[used_key] ){\n                          red_cell.push([starting_row + i, starting_col + j])\n                        }\n                      }\n                      window.EachCellStreamingValue[used_key] = values[i][j]\n                    }\n                  }\n                }\n              }\n\n              // Now change background color\n              var temp_arr = [[green_cell, '#2cbd54'], [red_cell, '#ff6669']]\n              for(var sub_arr of temp_arr){\n                var cell_text = ''\n                for(var arr of sub_arr[0]){\n                  var col_name = getExcelColName(arr[1])\n                  cell_text += col_name.toUpperCase() + (arr[0] + 1) + ':' + col_name.toUpperCase() + (arr[0] + 1) + ', '\n                }\n                if(cell_text !== ''){cell_text = cell_text.slice(0, cell_text.length - 2)}\n                const  green_area = active_sheet.getRanges(cell_text);\n                if(cell_text){\n                  // console.log(cell_text, window.OldBigSymbolPriceMap, window.BigSymbolPriceMap)\n                  green_area.format.font.color = sub_arr[1];\n\n                  await context.sync().then(async function(){\n                    // setTimeout(async function() {\n                    //   const green_area = active_sheet.getRanges(cell_text);\n                    //   green_area.format.font.color = \"black\";\n                    //   await context.sync()\n                    // }, 500);\n\n                  });\n                }\n              }\n\n\n            });\n\n      }, 500);\n\n\n    }\n\n  });\n\n\n  console.log('crypto')\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return \"Please login using the sidebar\" }\n  if (!symbol) { return \"Symbol cannot be empty\" }\n  if (typeof symbol !== 'string') { return 'Symbol has to be a string' }\n\n  symbol = symbol.toUpperCase()\n  // The first if is to use the first time when user open the file, since websocket is delayed, we connect to websocket here\n  if((!window.socket || window.socket.readyState !== window.socket.OPEN) && window.have_not_reconnect_websocket){\n    // console.log(window.socket.readyState, window.socket.OPEN)\n    connect(symbol)\n  } else if(!(symbol in window.BigSymbolPriceMap)){\n    // console.log(0)\n    let msg = {symbol: symbol,   type: \"subscribe\"}\n    window.socket.send(JSON.stringify(msg))\n    // console.log(3)\n  }\n\n  const timer = setInterval(() => {\n    const result = window.BigSymbolPriceMap[symbol];\n    // console.log(invocation)\n    invocation.setResult(result);\n  }, 500);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n\nCustomFunctions.associate(\"FS_EQUITYMETRICS\", FS_EquityMetrics);\nCustomFunctions.associate(\"FS_EQUITYFULLFINANCIALS\", FS_EquityFullFinancials);\nCustomFunctions.associate(\"FS_EQUITYCANDLES\", FS_EquityCandles);\nCustomFunctions.associate(\"FS_FOREXCANDLES\", FS_ForexCandles);\nCustomFunctions.associate(\"FS_CRYPTOCANDLES\", FS_CryptoCandles);\nCustomFunctions.associate(\"FS_ETFCANDLES\", FS_EtfCandles);\nCustomFunctions.associate(\"FS_FOREXALLRATES\", FS_ForexAllRates);\nCustomFunctions.associate(\"FS_CRYPTOPROFILE\", FS_CryptoProfile);\nCustomFunctions.associate(\"FS_ETFPROFILE\", FS_EtfProfile);\nCustomFunctions.associate(\"FS_STREAMING\", Fs_Streaming);"],"names":["equityHelper","symbol","metric","period","undefined","limit","api_key","readCookie","freq","ticker","toUpperCase","toLowerCase","map_excel_name_to_id","includes","id","is_full_statement","map_metrics","default_freq","supported_freq","isValidFreq_returnCleanString","prepare","metric_full_info","field_code","generate_query","url","link","URLSearchParams","toString","fetch","response","ok","Error","statusText","json","message","handle_receive_AR_EQUITY","statement","valid_resolution","lower_res","properties","candlesHelper","resolution","from","to","which","isNaN","Math","round","Date","parse","JSON","stringify","data","data_to_return","c","i","length","push","t","o","h","l","v","base_currency","Object","keys","key","map_name_crypto_profile","map_name_etf_profile","profile","connect","first_symbol","window","socket","WebSocket","slice","onopen","console","log","send","onmessage","e","Should_Update_Streaming","s","OldBigSymbolPriceMap","BigSymbolPriceMap","p","onclose","reason","setTimeout","have_not_reconnect_websocket","onerror","err","error","close","invocation","Excel","run","context","have_not_set_interval_change_color","setInterval","active_sheet","workbook","worksheets","getActiveWorksheet","range","getUsedRange","load","sync","then","sheet_id","address_portion","address","split","starting_row","starting_col","colnameToNumber","parseInt","green_cell","red_cell","formulas","values","j","current_formula","startsWith","arr","used_key","EachCellStreamingValue","sub_arr","cell_text","col_name","getExcelColName","green_area","getRanges","format","font","color","readyState","OPEN","msg","type","timer","result","setResult","onCanceled","clearInterval","have_not_add_on_calculated_trigger","CustomFunctions","associate","FS_EquityMetrics","FS_EquityFullFinancials","FS_EquityCandles","FS_ForexCandles","FS_CryptoCandles","FS_EtfCandles","Fs_Streaming"],"sourceRoot":""}