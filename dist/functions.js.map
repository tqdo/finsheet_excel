{"version":3,"file":"functions.js","mappings":"+gEAAeA,EAAa,EAAbA,G,gFAAf,WAA4BC,EAAQC,GAApC,+HAA4CC,EAA5C,oCAAqDC,EAAWC,EAAhE,oCAAwED,EAIxD,MAAVD,IAAkBA,OAASC,GAClB,MAATC,IAAiBA,OAAQD,GACzBE,EAAUC,WAAW,oBAErBC,EAAOL,EACPM,EAASR,EAERK,EAXP,yCAYW,CAAC,CAAC,oCAZb,UAeOG,EAfP,0CAgBW,CAAC,CAAC,4BAhBb,WAkBwB,iBAAXA,EAlBb,0CAmBW,CAAC,CAAC,+BAnBb,YAqBKA,EAAOC,SAAS,OAAQD,EAAOC,SAAS,KArB7C,0CAqB0D,CAAC,mBArB3D,WAuBED,EAASA,EAAOE,cACXT,EAxBP,0CAyBW,CAAC,CAAC,4BAzBb,YA2BEA,EAASA,EAAOU,iBAEAC,sBAA0B,CAAC,KAAM,KAAM,MAAMH,SAASR,GA7BxE,0CA8BW,CAAC,CAAC,wBA9Bb,WAgCe,KAATM,IACFA,OAAOJ,GAGW,iBAATI,QAAqC,IAATA,EApCzC,0CAqCW,CAAC,CAAC,+BArCb,WAuCgB,KAAVH,IACFA,OAAQD,GAEW,iBAAVC,QAAuC,IAAVA,EA1C1C,0CA2CW,CAAC,CAAC,yCA3Cb,kBA6CuB,IAAVA,GAAyBA,GAAS,GA7C/C,0CA8CW,CAAC,CAAC,yCA9Cb,WAiDMS,EAAKZ,KAAUW,qBAAuBA,qBAAqBX,GAAUA,EACrEa,EAAoB,CAAC,KAAM,KAAM,MAAML,SAASI,QAGvCV,IAATI,IAAuBO,IAAqBC,YAAYF,GAAIG,aArDlE,iBAuDMT,EADE,CAAE,KAAM,MAAME,SAASI,GAClB,MACQ,OAAPA,EACD,IAEAE,YAAYF,GAAIG,aA3D7B,2BA+DYF,GAAsBC,YAAYF,GAAIG,mBAAyBb,IAATI,EA/DlE,0CAgEW,CAAC,CAAC,0CAhEb,gBAoEoBJ,IAATI,EApEX,oBAqEIA,EAAOA,EAAKG,eAER,CAAC,KAAM,MAAMD,SAASI,KAAON,EAAKE,SAAS,OAvEnD,0CAwEa,CAAC,CAAC,yCAxEf,WA0Ee,OAAPI,IAAeN,EAAKE,SAAS,OA1ErC,0CA2Ea,CAAC,CAAC,gDA3Ef,WA8EQK,GACEG,EAAwB,OAAPJ,EAAc,CAAC,KAAM,MAAO,IAAK,OAAgB,OAAPA,EAAc,CAAC,KAAM,KAAO,CAAC,KAAM,MAAO,KACzGN,EAAOW,8BAA8BX,EAAMU,EAAgB,MAAOJ,IAElEN,IADSQ,YAAYF,GAAIG,cAClBE,8BAA8BX,EAAMQ,YAAYF,GAAII,eAAgBF,YAAYF,GAAIG,aAAcH,IAI9F,IAATN,EAtFR,0CAuFa,CAAC,CAAC,oBAvFf,eA2FOO,GAAqB,CAAC,MAAO,KAAM,IAAK,OAAOL,SAASF,IAASH,GAASA,EAAQ,EACrFG,GAAQ,IAAMH,EAGNU,IACRV,OAAQD,GAGNgB,EAAU,GACTL,IACCM,EAAmB,CAAEC,WAAYR,GACxB,OAATN,GAA0B,KAATA,QAAwBJ,IAATI,IAClCa,EAAgB,OAAab,GAE/BY,EAAUG,eACN,EACA,YACA,GACA,CAACF,GACD,GACA,CAAC,GAAI,IACLZ,EACA,CAACY,GACD,CAACZ,KAGPW,EAAU,EAAH,KAAQA,GAAY,CAAEX,OAAQA,EAAQP,OAAQY,EAAIN,KAAMA,EAAMF,QAASA,EAASD,MAAOA,EAAQU,kBAAmBA,EAAoB,IAAM,MACzI,KAAND,IACFM,EAAO,gBAAsB,KAGzBI,EAAMC,KAAO,mBAAqB,IAAIC,gBAAgBN,GAASO,WA1HvE,UA2HyBC,MAAMJ,GA3H/B,YA2HQK,EA3HR,QA6HgBC,GA7HhB,kCA8HsBD,EAASE,OA9H/B,eA8HQC,EA9HR,OA+HIC,QAAQC,IAAI,MAAOF,GA/HvB,4BAgIe,CAAC,CAACG,KAAKC,MAAMJ,GAAOA,SAhInC,4DAiIsB,CAAC,CAAC,iDAjIxB,yBAmImBH,EAASQ,OAnI5B,WAmIMA,EAnIN,OAoIEJ,QAAQC,IAAIL,EAAUQ,KACnB,YAAaA,GArIlB,0CAqI+B,CAAC,CAACA,EAAKC,WArItC,iCAsISC,yBAAyBF,EAAMtB,EAAmBD,IAtI3D,2D,yEAkJA,WAAgCb,EAAQC,GAAxC,uGAAgDC,EAAhD,oCAAyDC,EAAWC,EAApE,oCAA4ED,EACtEF,EADN,yCACqB,CAAC,CAAC,4BADvB,WAEEA,EAASA,EAAOU,iBACDC,qBAHjB,yCAGgD,CAAC,CAAC,wBAHlD,gCAISb,EAAaC,EAAQC,EAAQC,EAASE,IAJ/C,2C,yEAgBA,WAAuCJ,EAAQuC,GAA/C,yGAA0DrC,EAA1D,oCAAmEC,EAAWC,EAA9E,oCAAsFD,EAChFF,EAASsC,EADf,yCAEqB,CAAC,CAAC,4BAFvB,UAGEtC,EAASA,EAAOU,cACZ,CAAC,KAAM,KAAM,MAAMF,SAASR,GAJlC,yCAImD,CAAC,CAAC,wBAJrD,gCAKSF,EAAaC,EAAQC,EAAQC,EAASE,IAL/C,2C,wBASA,IAAIoC,EAAmB,CACrB,EAAI,EAAG,EAAI,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EACnC,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,GAE3CC,EAAY,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,GACnCC,EAAa,CAAC,QAAS,OAAQ,OAAQ,MAAO,U,SAInCC,EAAc,EAAdA,EAAAA,G,gFAAf,WAA6B3C,EAAQ4C,EAAYC,GAAjD,2HAAuDC,EAAvD,oCAA4D3C,EAAW4C,EAAvE,+BAA6E,QACjE,MAAND,IAAcA,OAAK3C,GACnBE,EAAUC,WAAW,oBAF3B,yCAGyB,CAAC,CAAC,oCAH3B,UAION,EAJP,yCAIwB,CAAC,CAAC,4BAJ1B,UAKwB,iBAAXA,EALb,0CAK2C,CAAC,CAAC,+BAL7C,YAMKA,EAAOS,SAAS,OAAQT,EAAOS,SAAS,KAN7C,0CAM0D,CAAC,mBAN3D,WAOET,EAASA,EAAOU,cAEVkC,KAAcJ,EATtB,0CASkD,CAAC,CAAC,wBATpD,WAUMI,KAAcH,IAAaG,EAAaA,EAAWlC,eAEnDsC,EAAeC,KAAKd,MAAM,IAAIc,MAAU,IAExCJ,EAdN,0CAcmB,CAAC,CAAC,4BAdrB,WAiBoB,iBAARA,GAAqBK,MAAML,GAjBvC,iBAkBIA,EAAOM,KAAKC,MAAMP,GAlBtB,2BAsBIA,EAAOI,KAAKd,MAAMU,GAAQ,MACvBK,MAAML,IAASA,EAAO,GAvB7B,0CAuBuC,CAAC,CAAC,oBAvBzC,WA2BW,IAANC,QAAmB3C,IAAP2C,EA3BjB,iBA4BIA,EAAKE,EA5BT,2BA+BuB,iBAANF,GAAmBI,MAAMJ,GA/B1C,iBAgCIA,EAAKK,KAAKC,MAAMN,GAhCpB,2BAoCIA,EAAKG,KAAKd,MAAMW,GAAM,MACnBI,MAAMJ,IAAOA,EAAK,GArCzB,0CAqCmC,CAAC,CAAC,kBArCrC,aAuCKA,GAAKD,GAvCV,0CAuCuB,CAAC,CAAC,kCAvCzB,eA0CM1B,EAAU,CAAEX,OAAQR,EAAQ4C,WAAYA,EAAYC,KAAMA,EAAMC,GAAIA,EAAIzC,QAASA,EAASqC,WAAYR,KAAKmB,UAAUX,GAAcK,MAAOA,GAIxIxB,EAAMC,KAAO,kBAAoB,IAAIC,gBAAgBN,GAASO,WA9CtE,UA+CyBC,MAAMJ,GA/C/B,YA+CQK,EA/CR,QAkDgBC,GAlDhB,kCAmDsBD,EAASE,OAnD/B,eAmDQC,EAnDR,yBAoDW,CAAC,CAACG,KAAKC,MAAMJ,GAAOA,SApD/B,yBAuDmBH,EAASQ,OAvD5B,aAwDK,YADCA,EAvDN,mDAwD+B,CAAC,CAACA,EAAKC,WAxDtC,WAyDMiB,EAAOlB,EAAKkB,KAEZC,EAAiB,CAAC,CAAC,SAAU,QAAS,OAAQ,OAAQ,MAAO,WAC5DD,EAAKE,EA5DZ,0CA4DwB,CAAC,CAAC,aA5D1B,QA6DE,GAAGF,EAAKE,EAAEC,cAAgBC,MACxB,IAAQC,EAAE,EAAEA,EAAEL,EAAKE,EAAEI,OAAOD,IAC1BJ,EAAeM,KAAK,CAClBP,EAAKQ,GAAKR,EAAKQ,EAAEH,GAAK,IAAIV,KAAiB,IAAZK,EAAKQ,EAAEH,IAAa,GACnDL,EAAKE,EAAEG,GAAKL,EAAKE,EAAEG,GAAK,GACxBL,EAAKS,GAAKT,EAAKS,EAAEJ,GAAKL,EAAKS,EAAEJ,GAAK,GAClCL,EAAKU,GAAKV,EAAKU,EAAEL,GAAKL,EAAKU,EAAEL,GAAK,GAClCL,EAAKW,GAAKX,EAAKW,EAAEN,GAAKL,EAAKW,EAAEN,GAAK,GAClCL,EAAKY,GAAKZ,EAAKY,EAAEP,GAAKL,EAAKY,EAAEP,GAAK,UAItCJ,EAAeM,KAAK,CAClBP,EAAKQ,EAAK,IAAIb,KAAe,IAAVK,EAAKQ,GAAa,GACrCR,EAAKE,EAAIF,EAAKE,EAAI,GAClBF,EAAKS,EAAIT,EAAKS,EAAI,GAClBT,EAAKU,EAAIV,EAAKU,EAAI,GAClBV,EAAKW,EAAIX,EAAKW,EAAI,GAClBX,EAAKY,EAAKZ,EAAKY,EAAI,KA/EzB,KAkFMX,EAAeK,OAAS,GAlF9B,0CAkF0C,CAAC,CAAC,aAlF5C,iCAmFSL,GAnFT,4C,yEA+FA,WAAgCvD,EAAQ4C,GAAxC,2GAAoDC,EAApD,oCAA0D1C,EAAW2C,EAArE,oCAA0E3C,EAA1E,kBACSwC,EAAc3C,EAAQ4C,EAAYC,EAAMC,EAAK,UADtD,2C,yEAaA,WAA+B9C,EAAQ4C,GAAvC,2GAAmDC,EAAnD,oCAAyD1C,EAAW2C,EAApE,oCAAyE3C,EAAzE,kBACSwC,EAAc3C,EAAQ4C,EAAYC,EAAMC,EAAK,UADtD,2C,yEAaA,WAAgC9C,EAAQ4C,GAAxC,2GAAoDC,EAApD,oCAA0D1C,EAAW2C,EAArE,oCAA0E3C,EAA1E,kBACSwC,EAAc3C,EAAQ4C,EAAYC,EAAMC,EAAK,WADtD,2C,yEAaA,WAA6B9C,EAAQ4C,GAArC,2GAAiDC,EAAjD,oCAAuD1C,EAAW2C,EAAlE,oCAAuE3C,EAAvE,kBACSwC,EAAc3C,EAAQ4C,EAAYC,EAAMC,EAAK,QADtD,2C,yEAaA,WAAoC9C,EAAQ4C,GAA5C,2GAAwDC,EAAxD,oCAA8D1C,EAAW2C,EAAzE,oCAA8E3C,EAA9E,kBACSwC,EAAc3C,EAAQ4C,EAAYC,EAAMC,EAAK,gBADtD,2C,yEAUA,sIAAgCqB,EAAhC,+BAA8C,MACxC9D,EAAUC,WAAW,oBAD3B,yCAEyB,CAAC,CAAC,oCAF3B,cAKMa,EAAU,CAACgD,cAAeA,EAAe9D,QAASA,GAChDkB,EAAMC,KAAO,0BAA4B,IAAIC,gBAAgBN,GAASO,WAN9E,SAOyBC,MAAMJ,GAP/B,WAOQK,EAPR,QAUgBC,GAVhB,0CAWW,CAAC,CAAC,aAXb,yBAamBD,EAASQ,OAb5B,aAcK,YADCA,EAbN,mDAc+B,CAAC,CAACA,EAAKC,WAdtC,QAiBE,IAFIiB,EAAOlB,EAAKkB,KACZC,EAAiB,GACrB,MAAea,OAAOC,KAAKf,GAA3B,eAAQgB,EAAyB,KAC/Bf,EAAeM,KAAK,CAACS,EAAKhB,EAAKgB,KAlBnC,yBAoBSf,GApBT,4C,wBAuBA,IAAIgB,EAA0B,CAC5B,KAAQ,OACR,SAAY,YACZ,YAAe,cACf,UAAa,wBACb,YAAe,eACf,UAAa,aACb,kBAAqB,qBACrB,WAAc,cACd,QAAW,UACX,UAAa,c,iDASf,WAAgCvE,GAAhC,yGACMK,EAAUC,WAAW,oBAD3B,yCAEyB,CAAC,CAAC,oCAF3B,UAGMN,EAHN,yCAGqB,CAAC,CAAC,4BAHvB,UAIuB,iBAAXA,EAJZ,yCAIwC,CAAC,CAAC,+BAJ1C,WAKKA,EAAOS,SAAS,KALrB,yCAKkC,CAAC,CAAC,iEALpC,cAMET,EAASA,EAAOU,cAIVa,EAAMC,KAAO,wBAA0B,IAAIC,gBADnC,CAACzB,OAAQA,EAAQK,QAASA,EAAS0C,MAAO,mBACkBrB,WAV5E,UAWyBC,MAAMJ,GAX/B,YAWQK,EAXR,QAcgBC,GAdhB,0CAeW,CAAC,CAAC,aAfb,yBAiBmBD,EAASQ,OAjB5B,aAkBK,YADCA,EAjBN,mDAkB+B,CAAC,CAACA,EAAKC,WAlBtC,QAqBE,IAFIiB,EAAOlB,EAAKkB,KACZC,EAAiB,GACrB,MAAea,OAAOC,KAAKE,GAA3B,eAAQD,EAA4C,KAC/ChB,EAAKgB,IACNf,EAAeM,KAAK,CAACU,EAAwBD,GAAMhB,EAAKgB,KAvB9D,yBA0BSf,GA1BT,6C,sBA8BA,IAAIiB,EAAuB,CACzB,WAAc,cACd,IAAO,MACP,UAAa,aACb,MAAS,QACT,YAAe,cACf,SAAY,WACZ,WAAc,aACd,aAAgB,gBAChB,cAAiB,iBACjB,kBAAqB,qBACrB,KAAQ,OACR,KAAQ,OACR,IAAO,MACP,YAAe,eACf,YAAe,MACf,gBAAmB,MACnB,cAAiB,iBACjB,QAAW,W,iDAQb,WAA6BxE,GAA7B,2GACMK,EAAUC,WAAW,oBAD3B,yCAEyB,CAAC,CAAC,oCAF3B,UAGMN,EAHN,yCAGqB,CAAC,CAAC,4BAHvB,UAIuB,iBAAXA,EAJZ,yCAIwC,CAAC,CAAC,+BAJ1C,cAKEA,EAASA,EAAOU,cAIVa,EAAMC,KAAO,wBAA0B,IAAIC,gBADnC,CAACzB,OAAQA,EAAQK,QAASA,EAAS0C,MAAO,gBACkBrB,WAT5E,UAUyBC,MAAMJ,GAV/B,YAUQK,EAVR,QAagBC,GAbhB,kCAcsBD,EAASE,OAd/B,eAcQC,EAdR,yBAeW,CAAC,CAACG,KAAKC,MAAMJ,GAAOA,SAf/B,yBAkBmBH,EAASQ,OAlB5B,aAoBK,YAFCA,EAlBN,mDAoB+B,CAAC,CAACA,EAAKC,WApBtC,QAwBE,IAHIiB,EAAOlB,EAAKkB,KAAKmB,QACjBlB,EAAiB,GAClBnB,EAAKkB,KAAKtD,SAAQuD,EAAiB,CAAC,CAAC,SAAUnB,EAAKkB,KAAKtD,UAC5D,MAAeoE,OAAOC,KAAKG,GAA3B,eAAQF,EAAyC,KAC5ChB,EAAKgB,IACNf,EAAeM,KAAK,CAACW,EAAqBF,GAAMhB,EAAKgB,KA1B3D,yBA6BSf,GA7BT,6C,sBAgCA,IAAImB,EAA+B,CACjC,UAAa,YACb,KAAQ,OACR,SAAY,WAEZ,YAAe,cACf,aAAgB,gBAEhB,WAAc,cACd,cAAiB,iBACjB,kBAAqB,qBAErB,KAAQ,YAER,SAAY,YACZ,SAAY,Y,iDASd,WAAoC1E,GAApC,2GACMK,EAAUC,WAAW,oBAD3B,yCAEyB,CAAC,CAAC,oCAF3B,UAGMN,EAHN,yCAGqB,CAAC,CAAC,4BAHvB,UAIuB,iBAAXA,EAJZ,yCAIwC,CAAC,CAAC,+BAJ1C,cAKEA,EAASA,EAAOU,cAIVa,EAAMC,KAAO,wBAA0B,IAAIC,gBADnC,CAACzB,OAAQA,EAAQK,QAASA,EAAS0C,MAAO,wBACkBrB,WAT5E,UAUyBC,MAAMJ,GAV/B,YAUQK,EAVR,QAagBC,GAbhB,kCAcsBD,EAASE,OAd/B,eAcQC,EAdR,yBAeW,CAAC,CAACG,KAAKC,MAAMJ,GAAOA,SAf/B,yBAkBmBH,EAASQ,OAlB5B,aAoBK,YAFCA,EAlBN,mDAoB+B,CAAC,CAACA,EAAKC,WApBtC,QAwBE,IAHIiB,EAAOlB,EAAKkB,KAAKmB,QACjBlB,EAAiB,GAClBnB,EAAKkB,KAAKtD,SAAQuD,EAAiB,CAAC,CAAC,SAAUnB,EAAKkB,KAAKtD,UAC5D,MAAeoE,OAAOC,KAAKK,GAA3B,eAAQJ,EAAiD,KACpDhB,EAAKgB,IACNf,EAAeM,KAAK,CAACa,EAA6BJ,GAAMhB,EAAKgB,KA1BnE,yBA6BSf,GA7BT,6C,uEAuCA,WAAyBvD,GAAzB,iGACMK,EAAUC,WAAW,oBAD3B,yCAEyB,CAAC,CAAC,oCAF3B,UAGMN,EAHN,yCAGqB,CAAC,CAAC,4BAHvB,UAIuB,iBAAXA,EAJZ,yCAIwC,CAAC,CAAC,+BAJ1C,cAKEA,EAASA,EAAOU,cAIVa,EAAMC,KAAO,iBAAmB,IAAIC,gBAD5B,CAACjB,OAAQR,EAAQK,QAASA,IAC2BqB,WATrE,UAUyBC,MAAMJ,GAV/B,YAUQK,EAVR,QAagBC,GAbhB,kCAcsBD,EAASE,OAd/B,eAcQC,EAdR,yBAeW,CAAC,CAACG,KAAKC,MAAMJ,GAAOA,SAf/B,yBAkBmBH,EAASQ,OAlB5B,aAmBK,YADCA,EAlBN,mDAmB+B,CAAC,CAACA,EAAKC,WAnBtC,iCAqBS,CAAC,CAACD,EAAKkB,QArBhB,6C,sBA2BA,SAASqB,EAAQC,GACf,IAAIvE,EAAUC,WAAW,oBACzBuE,OAAOC,OAAS,IAAIC,UAAU,SAAWvD,KAAKwD,MAAM,GAAM,eAAiB3E,GAE3EwE,OAAOC,OAAOG,OAAS,WACrBjD,QAAQC,IAAI,eACT2C,IACDC,OAAOC,OAAOI,KAAKhD,KAAKmB,UAAU,CAACrD,OAAQ4E,EAAc,KAAQ,eACjEC,OAAOM,oBAAqB,IAIhCN,OAAOC,OAAOM,UAAY,SAASC,GACjC,GAAGR,OAAOS,wBAAwB,CAChC,IAAIhC,EAAOpB,KAAKC,MAAMkD,EAAE/B,MACpBtD,EAASsD,EAAKA,KAAK,GAAGiC,EAC1BV,OAAOW,qBAAqBxF,GAAU6E,OAAOY,kBAAkBzF,GAC/D6E,OAAOY,kBAAkBzF,GAAUsD,EAAKA,KAAK,GAAGoC,IAIpDb,OAAOC,OAAOa,QAAU,SAASN,GAC/BrD,QAAQC,IAAI,GAAIoD,GAChBO,YAAW,WACK,MAAXP,EAAEQ,MACHhB,OAAOiB,8BAA+B,EACtCnB,KAEAE,OAAOM,oBAAqB,IAG7B,MAGLN,OAAOC,OAAOiB,QAAU,SAASC,GAC/BhE,QAAQC,IAAI+D,GACZhE,QAAQD,MAAM,6BAA8BiE,EAAI3D,QAAS,kBACzDwC,OAAOC,OAAOmB,S,iDAwBlB,WAA4BjG,EAAQkG,GAApC,2FACEC,MAAMC,IAAN,4CAAU,WAAOC,GAAP,gFACLxB,OAAOyB,qCACRzB,OAAOyB,oCAAqC,EAC5CC,YAAW,2BAAC,wGACN1B,OAAOS,wBADD,wDAENkB,EAAeH,EAAQI,SAASC,WAAWC,sBAC3CC,EAAQJ,EAAaK,cAAa,IAChCC,KAAK,YACXF,EAAME,KAAK,WACXF,EAAME,KAAK,UAND,SAQJT,EAAQU,OACTC,KADC,2BACI,6IACAC,EAAWT,EAAa3F,GAExBqG,EAAkBN,EAAMO,QAAQC,MAAM,KAAK,GAAGA,MAAM,KAAK,GACzDC,EAAe,EAAGC,EAAe,EAC7B3D,EAAE,EALN,YAKSA,EAAEuD,EAAgBtD,QAL3B,oBAMEV,MAAMgE,EAAgBvD,IANxB,uBAOA2D,EAAeC,gBAAgBL,EAAgBlC,MAAM,EAAErB,IAAM,EAC7D0D,EAAeG,SAASN,EAAgBlC,MAAMrB,IAAM,EARpD,4BAKmCA,IALnC,uBAoBJ,IAJI8D,EAAa,GACbC,EAAW,GACXC,EAAWf,EAAMe,SACjBC,EAAShB,EAAMgB,OACXjE,EAAE,EAAEA,EAAEgE,EAAS/D,OAAQD,IAC7B,IAAQkE,EAAE,EAAEA,EAAEF,EAAS,GAAG/D,OAAQiE,KAC5BC,EAAkBH,EAAShE,GAAGkE,IACflH,cAAcoH,WAAW,oBAGxB,KAFdC,EAAMF,EAAgBV,MAAM,MAEzBxD,QACD5D,EAASgI,EAAI,GACdnD,OAAOY,kBAAkBzF,IAAW6E,OAAOW,qBAAqBxF,KAC9D6E,OAAOY,kBAAkBzF,GAAU6E,OAAOW,qBAAqBxF,GAChEyH,EAAW5D,KAAK,CAACwD,EAAe1D,EAAG2D,EAAeO,IAC1ChD,OAAOY,kBAAkBzF,GAAU6E,OAAOW,qBAAqBxF,IACvE0H,EAAS7D,KAAK,CAACwD,EAAe1D,EAAG2D,EAAeO,OAShDI,EAAWhB,EAAW,MAAQI,EAAe1D,GAAK,MAAQ2D,EAAeO,GAC1EhD,OAAOqD,uBAAuBD,IAAaL,EAAOjE,GAAGkE,KACnDD,EAAOjE,GAAGkE,GAAKhD,OAAOqD,uBAAuBD,GAC9CR,EAAW5D,KAAK,CAACwD,EAAe1D,EAAG2D,EAAeO,IAC1CD,EAAOjE,GAAGkE,GAAKhD,OAAOqD,uBAAuBD,IACrDP,EAAS7D,KAAK,CAACwD,EAAe1D,EAAG2D,EAAeO,KAGpDhD,OAAOqD,uBAAuBD,GAAYL,EAAOjE,GAAGkE,KAjDxD,MAwDW,CAAC,CAACJ,EAAY,WAAY,CAACC,EAAU,YAxDhD,0CAyDIS,EAzDJ,KA0DEC,EAAY,GA1Dd,IA2DaD,EAAQ,IA3DrB,IA2DF,2BAAQH,EAAkB,QACpBK,EAAWC,gBAAgBN,EAAI,IACnCI,GAAaC,EAAS3H,eAAiBsH,EAAI,GAAK,GAAK,IAAMK,EAAS3H,eAAiBsH,EAAI,GAAK,GAAK,KA7DnG,iCA+De,KAAdI,IAAkBA,EAAYA,EAAUpD,MAAM,EAAGoD,EAAUxE,OAAS,IAChE2E,EAAa/B,EAAagC,UAAUJ,IACxCA,EAjED,wBAmEAG,EAAWE,OAAOC,KAAKC,MAAQR,EAAQ,GAnEvC,UAqEM9B,EAAQU,OAAOC,KAAf,2BAAoB,kIArE1B,yEATA,2CA4FT,MA/FG,2CAAV,uDAuGc1G,WAAW,oBAxG3B,yCAyGyB,kCAzGzB,UA0GON,EA1GP,yCA0GwB,0BA1GxB,UA2GwB,iBAAXA,EA3Gb,yCA2G2C,6BA3G3C,OA6GEA,EAASA,EAAOU,cAEXmE,OAAOC,QAAUD,OAAOC,OAAO8D,aAAe/D,OAAOC,OAAO+D,OAAShE,OAAOiB,6BAGrE9F,KAAU6E,OAAOY,oBAEvBqD,EAAM,CAAC9I,OAAQA,EAAU+I,KAAM,aACnClE,OAAOC,OAAOI,KAAKhD,KAAKmB,UAAUyF,IAClCjE,OAAOM,oBAAqB,GAL5BR,EAAQ3E,GASJgJ,EAAQzC,aAAY,WACxB,GAAG1B,OAAOM,mBAAmB,CAC3B,IAAM8D,EAASpE,OAAOY,kBAAkBzF,GAExCkG,EAAWgD,UAAUD,QAErB/C,EAAWgD,UAAU,kEAGtB,KAEHhD,EAAWiD,WAAa,WACtBC,cAAcJ,IAtIlB,4C,yEAoJA,WAAqChJ,EAAQ4C,GAA7C,uIACMvC,EAAUC,WAAW,oBAD3B,yCAEyB,CAAC,CAAC,oCAF3B,UAGON,EAHP,yCAGwB,CAAC,CAAC,4BAH1B,UAIwB,iBAAXA,EAJb,yCAI2C,CAAC,CAAC,+BAJ7C,WAKKA,EAAOS,SAAS,OAAQT,EAAOS,SAAS,KAL7C,yCAK0D,CAAC,mBAL3D,UAMET,EAASA,EAAOU,cAEVkC,KAAcJ,EARtB,0CAQkD,CAAC,CAAC,wBARpD,eASMI,KAAcH,IAAaG,EAAaA,EAAWlC,eAEnDS,EAAU,CAACd,QAAUA,EAASL,OAAQA,EAAQ4C,WAAYA,EAAYG,MAAO,uBACjFf,QAAQC,IAAI,EAAGd,GACTI,EAAMC,KAAO,oBAAsB,IAAIC,gBAAgBN,GAASO,WAbxE,UAcyBC,MAAMJ,GAd/B,YAcQK,EAdR,QAiBgBC,GAjBhB,kCAkBsBD,EAASE,OAlB/B,eAkBQC,EAlBR,mCAmBe,CAAC,CAACG,KAAKC,MAAMJ,GAAOA,SAnBnC,4DAoBsB,CAAC,CAAC,aApBxB,yBAsBmBH,EAASQ,OAtB5B,aAuBK,YADCA,EAtBN,mDAuB+B,CAAC,CAACA,EAAKC,WAvBtC,kBAyBQiB,EAAOlB,EAAKkB,KACZC,EAAiB,GACjB8F,EAAU,EA3BlB,IA4BmB/F,GA5BnB,+DA4BYgG,EA5BZ,SA6BcC,aAAgBD,EAAItJ,OA7BlC,wDA+BM,IADIwJ,EAAa,CAAC,CAAC,eAAeF,EAAIC,cACtC,MAAenF,OAAOC,KAAKiF,GAA3B,eACa,iBADLhF,EAAwB,OACM,WAARA,GAC1BkF,EAAW3F,KAAK,CAAC4F,SAASnF,GAAMgF,EAAIhF,KAIrCkF,EAAW5F,OAASyF,IACrBA,EAAUG,EAAW5F,QAEvBL,EAAeM,KAAK2F,GAxC1B,iJA0CI,IAAQ7F,EAAE,EAAEA,EAAEJ,EAAeK,OAAQD,IAEnC,IADM+F,EAAgBL,EAAU9F,EAAeI,GAAGC,OAC1CiE,EAAE,EAAGA,EAAG6B,EAAe7B,IAC7BtE,EAAeI,GAAGE,KAAK,CAAC,GAAG,KAC3B7B,QAAQC,IAAIsB,EAAeI,GAAGC,QA9CtC,KAiDQL,EAAeK,OAAS,GAjDhC,0CAiD4C,CAAC,CAAC,aAjD9C,QAmDI,IADI+F,EAAQ,GACJhG,EAAE,EAAEA,EAAEJ,EAAe,GAAGK,OAAQD,IAAI,CACtCqE,EAAM,GADgC,IAE1BzE,GAF0B,IAE1C,2BAAQqG,EAAuB,QAC7B5B,EAAMA,EAAI6B,OAAOD,EAAKjG,IAHkB,8BAK1CgG,EAAM9F,KAAKmE,GAxDjB,OA0DIhG,QAAQC,IAAI0H,GA1DhB,kBA2DWA,GA3DX,4DA6DW,CAAC,CAAC,aA7Db,kF,uEAyEA,WAAoC3J,EAAQ4C,GAA5C,mGACMvC,EAAUC,WAAW,oBAD3B,yCAGW,CAAC,CAAC,oCAHb,UAKON,EALP,yCAMW,CAAC,CAAC,4BANb,UAQwB,iBAAXA,EARb,yCASW,CAAC,CAAC,+BATb,WAWMA,EAAOS,SAAS,OAAQT,EAAOS,SAAS,KAX9C,yCAYW,CAAC,mBAZZ,UAcET,EAASA,EAAOU,cAEVkC,KAAcJ,EAhBtB,0CAiBW,CAAC,CAAC,wBAjBb,eAmBMI,KAAcH,IAChBG,EAAaA,EAAWlC,eAKpBa,EAAMC,KAAO,oBAAsB,IAAIC,gBAF/B,CAACpB,QAASA,EAASL,OAAQA,EAAQ4C,WAAYA,EAAYG,MAAO,uBAEVrB,WAzBxE,UA0ByBC,MAAMJ,GA1B/B,YA0BQK,EA1BR,QA6BgBC,GA7BhB,kCA8BsBD,EAASE,OA9B/B,eA8BQC,EA9BR,mCAgCa,CAAC,CAACG,KAAKC,MAAMJ,GAAOA,SAhCjC,4DAkCa,CAAC,CAAC,aAlCf,yBAqCmBH,EAASQ,OArC5B,aAsCM,YADAA,EArCN,mDAuCW,CAAC,CAACA,EAAKC,WAvClB,eAyCMiB,EAAOlB,EAAKkB,KAzClB,4BA+CWA,EAAKM,OAAS,EAAI,CAAC,CAAC,YAAc,CAACN,IA/C9C,4DAiDW,CAAC,CAAC,aAjDb,oE,uEA6DA,WAAsCtD,EAAQ4C,GAA9C,mGACMvC,EAAUC,WAAW,oBAD3B,yCAGW,CAAC,CAAC,oCAHb,UAKON,EALP,yCAMW,CAAC,CAAC,4BANb,UAQwB,iBAAXA,EARb,yCASW,CAAC,CAAC,+BATb,WAWMA,EAAOS,SAAS,OAAQT,EAAOS,SAAS,KAX9C,yCAYW,CAAC,mBAZZ,UAcET,EAASA,EAAOU,cAEVkC,KAAcJ,EAhBtB,0CAiBW,CAAC,CAAC,wBAjBb,eAmBMI,KAAcH,IAChBG,EAAaA,EAAWlC,eAKpBa,EAAMC,KAAO,oBAAsB,IAAIC,gBAF/B,CAACpB,QAASA,EAASL,OAAQA,EAAQ4C,WAAYA,EAAYG,MAAO,yBAEVrB,WAzBxE,UA0ByBC,MAAMJ,GA1B/B,YA0BQK,EA1BR,QA6BgBC,GA7BhB,kCA8BsBD,EAASE,OA9B/B,eA8BQC,EA9BR,mCAgCa,CAAC,CAACG,KAAKC,MAAMJ,GAAOA,SAhCjC,4DAkCa,CAAC,CAAC,aAlCf,yBAqCmBH,EAASQ,OArC5B,aAsCM,YADAA,EArCN,mDAuCW,CAAC,CAACA,EAAKC,WAvClB,eAyCMiB,EAAOlB,EAAKkB,KAzClB,4BA4CW,CACL,CAAC,MAAOA,EAAKwG,kBAAkBC,MAAMC,KACrC,CAAC,UAAW1G,EAAKwG,kBAAkBC,MAAME,SACzC,CAAC,OAAQ3G,EAAKwG,kBAAkBC,MAAMG,MACtC,CAAC,mBAAoB5G,EAAKwG,kBAAkBK,QAC5C,CAAC,cAAe7G,EAAK8G,MAAMC,KAC3B,CAAC,WAAY/G,EAAK8G,MAAME,SAAS5I,cAlDvC,4DAqDW,CAAC,CAAC,aArDb,oE,uEAqEA,WAAsC1B,EAAQ4C,EAAY2H,EAAW1H,GAArE,qJAA2EC,EAA3E,oCAA8E3C,EAAWqK,EAAzF,+BAA0G,GACxGxI,QAAQC,IAAI,GAAIuI,GADlB,kBAES,CAAC,CAAC,MAFX,UAMOxK,EANP,0CAMwB,CAAC,CAAC,4BAN1B,WAOwB,iBAAXA,EAPb,0CAO2C,CAAC,CAAC,+BAP7C,YAQKA,EAAOS,SAAS,OAAQT,EAAOS,SAAS,KAR7C,0CAQ0D,CAAC,mBAR3D,WASET,EAASA,EAAOU,cAEVkC,KAAcJ,EAXtB,0CAWkD,CAAC,CAAC,wBAXpD,WAYMI,KAAcH,IAAaG,EAAaA,EAAWlC,eAE9B,iBAAd6J,EAdb,0CAc8C,CAAC,CAAC,kCAdhD,WAeEA,EAAYA,EAAU5J,cAElBqC,EAAeC,KAAKd,MAAM,IAAIc,MAAU,IAExCJ,EAnBN,0CAmBmB,CAAC,CAAC,4BAnBrB,WAsBoB,iBAARA,GAAqBK,MAAML,GAtBvC,iBAuBIA,EAAOM,KAAKC,MAAMP,GAvBtB,2BA2BIA,EAAOI,KAAKd,MAAMU,GAAQ,MACvBK,MAAML,IAASA,EAAO,GA5B7B,0CA4BuC,CAAC,CAAC,oBA5BzC,WAgCW,IAANC,QAAmB3C,IAAP2C,EAhCjB,iBAiCIA,EAAKE,EAjCT,2BAoCuB,iBAANF,GAAmBI,MAAMJ,GApC1C,iBAqCIA,EAAKK,KAAKC,MAAMN,GArCpB,2BAyCIA,EAAKG,KAAKd,MAAMW,GAAM,MACnBI,MAAMJ,IAAOA,EAAK,GA1CzB,0CA0CmC,CAAC,CAAC,kBA1CrC,aA4CKA,GAAKD,GA5CV,0CA4CuB,CAAC,CAAC,iCA5CzB,QAiDI,IAHE1B,EAAU,GA9ChB,UAgDQsJ,EAAuBvI,KAAKC,MAAMqI,EAAiBE,WAAW,IAAK,MACvE,MAAetG,OAAOC,KAAKoG,GAA3B,eAAQnG,EAAyC,KAC/CmG,EAAqBnG,GAAOmG,EAAqBnG,GAAK5C,WAExDP,EAAU,CAAEnB,OAAQA,EAAQ4C,WAAYA,EAAYC,KAAMA,EAAMC,GAAIA,EAAIzC,QAASA,EAASkK,UAAWA,EAAWC,iBAAkBtI,KAAKmB,UAAUoH,GAAuB1H,MAAO,wBApDnL,4EAsDW,CAAC,CAAC,8BAtDb,eAyDEf,QAAQC,IAAI,UAAWd,GAEjBI,EAAMC,KAAO,oBAAsB,IAAIC,gBAAgBN,GAASO,WA3DxE,UA4DyBC,MAAMJ,GA5D/B,YA4DQK,EA5DR,QA+DgBC,GA/DhB,kCAgEsBD,EAASE,OAhE/B,eAgEQC,EAhER,mCAkEa,CAAC,CAACG,KAAKC,MAAMJ,GAAOA,SAlEjC,4DAoEa,CAAC,CAAC,aApEf,yBAwEmBH,EAASQ,OAxE5B,WAwEMA,EAxEN,OAyEEJ,QAAQC,IAAIG,KACT,YAAaA,GA1ElB,0CA0E+B,CAAC,CAACA,EAAKC,WA1EtC,sBA4EQiB,EAAOlB,EAAKkB,MAGNE,EA/Ed,0CA+E0B,CAAC,CAAC,aA/E5B,QAmFI,IAHImH,EAAmB,CAAC7G,EAAE,EAAGN,EAAE,EAAGO,EAAE,EAAGC,EAAE,EAAGC,EAAE,EAAGC,EAAE,EAAGqB,EAAE,GACpDqF,EAAc,GACdrH,EAAiB,CAAC,CAAC,SAAU,QAAS,OAAQ,OAAQ,MAAO,WACjE,MAAea,OAAOC,KAAKf,GAA3B,eAAQgB,EAAyB,KAC3BqG,EAAiBrG,KACnBsG,EAAY/G,KAAKS,GACjBf,EAAe,GAAGM,KAAK4F,SAASnF,KAIpC,IAAQX,EAAE,EAAEA,EAAEL,EAAKE,EAAEI,OAAOD,IAAI,CAC1BqE,EAAM,CACR1E,EAAKQ,GAAKR,EAAKQ,EAAEH,GAAK,IAAIV,KAAiB,IAAZK,EAAKQ,EAAEH,IAAa,GACnDL,EAAKE,EAAEG,GAAKL,EAAKE,EAAEG,GAAK,GACxBL,EAAKS,GAAKT,EAAKS,EAAEJ,GAAKL,EAAKS,EAAEJ,GAAK,GAClCL,EAAKU,GAAKV,EAAKU,EAAEL,GAAKL,EAAKU,EAAEL,GAAK,GAClCL,EAAKW,GAAKX,EAAKW,EAAEN,GAAKL,EAAKW,EAAEN,GAAK,GAClCL,EAAKY,GAAKZ,EAAKY,EAAEP,GAAKL,EAAKY,EAAEP,GAAK,IAPN,IASnBiH,GATmB,IAS9B,2BAAItG,EAAmB,QACrB0D,EAAInE,KAAKP,EAAKgB,IAAyB,OAAjBhB,EAAKgB,GAAKX,SAAgCxD,IAAjBmD,EAAKgB,GAAKX,GAAmBL,EAAKgB,GAAKX,GAAK,IAV/D,8BAY9BJ,EAAeM,KAAKmE,GAtG1B,KAwGQzE,EAAeK,OAAS,GAxGhC,0CAwG4C,CAAC,CAAC,aAxG9C,eAyGI5B,QAAQC,IAAIsB,GAzGhB,kBA0GWA,GA1GX,4DA4GW,CAAC,CAAC,aA5Gb,2E,wBAnXAsB,OAAOW,qBAAuB,GAC9BX,OAAOY,kBAAoB,GAE3BZ,OAAOqD,uBAAyB,GAEhCrD,OAAOS,yBAA0B,EACjCT,OAAOiB,8BAA+B,EACtCjB,OAAOgG,oCAAqC,EAC5ChG,OAAOyB,oCAAqC,EAE5CzB,OAAOM,oBAAqB,EAE5BR,IAudAmG,gBAAgBC,UAAU,oB,SAv6BM,EAAjBC,G,kCAw6BfF,gBAAgBC,UAAU,2B,SAx5Ba,EAAxBE,G,kCAy5BfH,gBAAgBC,UAAU,oB,SAxyBM,EAAjBG,G,kCAyyBfJ,gBAAgBC,UAAU,mB,SA5xBK,EAAhBI,G,kCA6xBfL,gBAAgBC,UAAU,oB,SAhxBM,EAAjBK,G,kCAixBfN,gBAAgBC,UAAU,iB,SApwBG,EAAdM,G,kCAqwBfP,gBAAgBC,UAAU,wB,SAxvBU,EAArBO,G,kCAyvBfR,gBAAgBC,UAAU,oB,6CAC1BD,gBAAgBC,UAAU,oB,SAtsBM,G,kCAusBhCD,gBAAgBC,UAAU,iB,SA/oBG,G,kCAgpB7BD,gBAAgBC,UAAU,wB,SAxlBU,G,kCAylBpCD,gBAAgBC,UAAU,a,SAljBD,G,kCAmjBzBD,gBAAgBC,UAAU,gB,SA3dE,EAAbQ,G,kCA4dfT,gBAAgBC,UAAU,yB,SAxUW,EAAtBS,G,kCAyUfV,gBAAgBC,UAAU,wB,SAhQU,EAArBU,G,kCAiQfX,gBAAgBC,UAAU,0B,SApMY,EAAvBW,G,kCAqMfZ,gBAAgBC,UAAU,0B,SAhIY,EAAvBY,EAAAA,EAAAA,G","sources":["webpack:///./src/functions/functions.js?"],"sourcesContent":["async function equityHelper(symbol, metric, period = undefined, limit = undefined) {\n  // return [[\"Please login using the sidebar\"]];\n  // console.log(123)\n\n  if (period == null) { period = undefined}\n  if (limit == null) { limit = undefined }\n  var api_key = readCookie(\"finsheet_api_key\");\n  // console.log(api_key)\n  var freq = period;\n  var ticker = symbol;\n\n  if (!api_key) {\n    return [[\"Please login using the sidebar\"]];\n  }\n\n  if (!ticker) {\n    return [[\"Symbol cannot be empty\"]];\n  }\n  if (typeof ticker !== \"string\") {\n    return [[\"Symbol has to be a string\"]];\n  }\n  if(ticker.includes(\",\") || ticker.includes(\";\")){return [\"Invalid symbol\"]}\n\n  ticker = ticker.toUpperCase();\n  if (!metric) {\n    return [[\"Metric cannot be empty\"]];\n  }\n  metric = metric.toLowerCase();\n\n  if (!(metric in map_excel_name_to_id) && ![\"bs\", \"cf\", \"ic\"].includes(metric)) {\n    return [[\"Unsupported metric\"]];\n  }\n  if (freq === \"\") {\n    freq = undefined;\n  }\n\n  if (typeof freq !== \"string\" && typeof freq !== \"undefined\") {\n    return [[\"Period has to be a string\"]];\n  }\n  if (limit === \"\") {\n    limit = undefined;\n  }\n  if (typeof limit !== \"number\" && typeof limit !== \"undefined\") {\n    return [[\"Limit has to be a positive interger\"]];\n  }\n  if (typeof limit !== \"undefined\" && limit <= 0) {\n    return [[\"Limit has to be a positive interger\"]];\n  }\n  ////// Check if frequency is valid\n  var id = metric in map_excel_name_to_id ? map_excel_name_to_id[metric] : metric;\n  var is_full_statement = [\"bs\", \"cf\", \"ic\"].includes(id);\n\n  // First if the freq is undefined and this metric has default freq, set to default\n  if (freq === undefined && (is_full_statement || map_metrics[id].default_freq)) {\n    if ([ \"cf\", \"ic\"].includes(id)) {\n      freq = \"TTM\";\n    } else if(id === 'bs'){\n      freq = \"Q\"\n    } else {\n      freq = map_metrics[id].default_freq;\n    }\n  }\n  // Next if user submit a freq but this metric has no freq (like price, share count...), then report error\n  else if (!is_full_statement && !map_metrics[id].default_freq && freq !== undefined) {\n    return [[\"This metric does not support periods\"]];\n  }\n\n  // Now check whether the freq users enter is valid or not\n  else if (freq !== undefined) {\n    freq = freq.toUpperCase();\n\n    if ([\"bs\", \"ic\"].includes(id) && freq.includes(\"YTD\")) {\n      return [[\"Period YTD is only available for cf\"]];\n    }\n    if (id === \"bs\" && freq.includes(\"TTM\")) {\n      return [[\"Period TTM is only available for ic and cf\"]];\n    }\n\n    if (is_full_statement) {\n      var supported_freq = id === \"cf\" ? [\"FY\", \"TTM\", \"Q\", \"YTD\"] : id === \"bs\" ? [\"FY\", \"Q\"] : [\"FY\", \"TTM\", \"Q\"];\n      freq = isValidFreq_returnCleanString(freq, supported_freq, \"TTM\", id);\n    } else if (map_metrics[id].default_freq) {\n      freq = isValidFreq_returnCleanString(freq, map_metrics[id].supported_freq, map_metrics[id].default_freq, id);\n    } else {\n      freq = false;\n    }\n    if (freq === false) {\n      return [[\"Invalid period\"]];\n    }\n  }\n  ///// Combine limit with freq to become series freq if applicable\n  if (!is_full_statement && [\"TTM\", \"FY\", \"Q\", \"YTD\"].includes(freq) && limit && limit > 1) {\n    freq += \"@\" + limit;\n  }\n  /// If not applicable, set limit = undefined (avoid getting useless output from Go and make it convenient to process data later)\n  else if (!is_full_statement) {\n    limit = undefined;\n  }\n  //// Prepare stuff to send to Go\n  var prepare = {};\n  if (!is_full_statement) {\n    var metric_full_info = { field_code: id };\n    if (freq !== \"-1\" && freq !== \"\" && freq !== undefined) {\n      metric_full_info[\"period\"] = freq;\n    }\n    prepare = generate_query(\n        1,\n        \"watchlist\",\n        [],\n        [metric_full_info],\n        [],\n        [\"\", \"\"],\n        ticker,\n        [metric_full_info],\n        [ticker]\n    );\n  }\n  prepare = { ...prepare, ...{ ticker: ticker, metric: id, freq: freq, api_key: api_key, limit: limit , is_full_statement: is_full_statement ? \"y\" : \"n\" } };\n  if (id == 206) {\n    prepare[\"is_latest_price\"] = \"1\";\n  }\n  //// Now get data\n  const url = link + \"/excel/standard?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  if (!response.ok) {\n    var error = await response.text()\n    console.log(\"err\", error)\n    try{return [[JSON.parse(error).error]]}\n    catch (e) {return [['Rate limit reached. Please try again later.']]}\n  }\n  var json = await response.json()\n  console.log(response, json)\n  if('message' in json){return [[json.message]]}\n  return handle_receive_AR_EQUITY(json, is_full_statement, id);\n}\n\n/**\n * @customfunction FS_EQUITYMETRICS FS_EquityMetrics\n * @param symbol {string} Stock Symbol.\n * @param metric {string} Metric.\n * @param [period] {string} Period (optional).\n * @param [limit] {number} Limit (optional, default to 1).\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EquityMetrics(symbol, metric, period = undefined, limit = undefined){\n  if(!metric){return [[\"Metric cannot be empty\"]]}\n  metric = metric.toLowerCase()\n  if(!(metric in map_excel_name_to_id) ){return [[\"Unsupported metric\"]]}\n  return equityHelper(symbol, metric, period , limit )\n}\n\n/**\n * @customfunction FS_EQUITYFULLFINANCIALS FS_EquityFullFinancials\n * @param symbol {string} Stock Symbol.\n * @param statement {string} Statement (bs, ic or cf).\n * @param [period] {string} Period (optional).\n * @param [limit] {number} Limit (optional, default to 1).\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EquityFullFinancials(symbol, statement, period = undefined, limit = undefined){\n  var metric = statement\n  if(!metric){return [[\"Metric cannot be empty\"]]}\n  metric = metric.toLowerCase()\n  if(!['bs', 'cf', 'ic'].includes(metric) ){return [[\"Unsupported metric\"]]}\n  return equityHelper(symbol, metric, period , limit )\n}\n\n\nvar valid_resolution = {\n  '1':1, '5':1, '15':1, '30':1, '60':1,\n  'D': 1, 'W': 1, 'M': 1, 'd': 1, 'w': 1, 'm': 1\n}\nvar lower_res = { 'd': 1, 'w': 1, 'm': 1 }\nvar properties = [\"close\", \"open\", \"high\", \"low\", \"volume\"]\n\n\n\nasync function candlesHelper(symbol, resolution, from, to = undefined, which=\"stock\" ) {\n  if (to == null) { to = undefined }\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if (!symbol) { return [[\"Symbol cannot be empty\"]] }\n  if (typeof symbol !== 'string') { return [['Symbol has to be a string']] }\n  if(symbol.includes(\",\") || symbol.includes(\";\")){return [\"Invalid symbol\"]}\n  symbol = symbol.toUpperCase()\n\n  if (!(resolution in valid_resolution)) { return [['Invalid resolution']] }\n  if (resolution in lower_res) { resolution = resolution.toUpperCase() }\n\n  var current_time = Date.parse(new Date()) / 1000\n  //// Check from\n  if(!from){return [[\"'from' cannot be empty\"]]}\n\n  // Handle unix time\n  if(typeof from == 'number' || !isNaN(from)){\n    from = Math.round(from)\n  }\n  // Now convert string/Date object or whatever input user gives.\n  else{\n    from = Date.parse(from) / 1000\n    if(isNaN(from) || from < 0) return [[\"Invalid 'from'\"]]\n  }\n\n  //// Check to\n  if(to == '' || to === undefined){\n    to = current_time\n  }\n  // Handle unix time\n  else if(typeof to == 'number' || !isNaN(to)){\n    to = Math.round(to)\n  }\n  // Now convert string/Date object or whatever input user gives.\n  else{\n    to = Date.parse(to) / 1000\n    if(isNaN(to) || to < 0) return [[\"Invalid 'to'\"]]\n  }\n  if(to <=from){return [[\"'to' cannot be before 'from'\"]]}\n\n  //// Send and get data\n  var prepare = { ticker: symbol, resolution: resolution, from: from, to: to, api_key: api_key, properties: JSON.stringify(properties) , which: which, }\n\n\n  //// Now get data\n  const url = link + \"/excel/candles?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    var error = await response.text()\n    return [[JSON.parse(error).error]]\n  }\n\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n\n  var data_to_return = [['Period', 'Close', 'Open', 'High', 'Low', 'Volume']]\n  if (!data.c) { return [['No data']] }\n  if(data.c.constructor === Array){\n    for(var i=0;i<data.c.length;i++){\n      data_to_return.push([\n        data.t && data.t[i] ? new Date(data.t[i] * 1000) : '',\n        data.c[i] ? data.c[i] : '',\n        data.o && data.o[i] ? data.o[i] : '',\n        data.h && data.h[i] ? data.h[i] : '',\n        data.l && data.l[i] ? data.l[i] : '',\n        data.v && data.v[i] ? data.v[i] : '',\n      ])\n    }\n  } else { // This result is from Quote (get the latest)\n    data_to_return.push([\n      data.t ?  new Date(data.t  * 1000) : '',\n      data.c ? data.c : '' ,\n      data.o ? data.o : '' ,\n      data.h ? data.h : '' ,\n      data.l ? data.l : '' ,\n      data.v  ? data.v : ''\n    ])\n  }\n  if (data_to_return.length < 2) { return [['No data']] }\n  return data_to_return\n}\n\n/**\n * @customfunction FS_EQUITYCANDLES FS_EquityCandles\n * @param symbol {string} Stock Symbol.\n * @param resolution {string} Resolution.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EquityCandles(symbol, resolution, from= undefined, to = undefined, ){\n  return candlesHelper(symbol, resolution, from, to , \"stock\" )\n}\n\n/**\n * @customfunction FS_FOREXCANDLES FS_ForexCandles\n * @param symbol {string} Forex Symbol.\n * @param resolution {string} Resolution.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_ForexCandles(symbol, resolution, from= undefined, to = undefined, ){\n  return candlesHelper(symbol, resolution, from, to , \"forex\" )\n}\n\n/**\n * @customfunction FS_CRYPTOCANDLES FS_CryptoCandles\n * @param symbol {string} Crypto Symbol.\n * @param resolution {string} Resolution.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_CryptoCandles(symbol, resolution, from= undefined, to = undefined, ){\n  return candlesHelper(symbol, resolution, from, to , \"crypto\" )\n}\n\n/**\n * @customfunction FS_ETFCANDLES FS_EtfCandles\n * @param symbol {string} Etf Symbol.\n * @param resolution {string} Resolution.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EtfCandles(symbol, resolution, from= undefined, to = undefined, ){\n  return candlesHelper(symbol, resolution, from, to , \"etf\" )\n}\n\n/**\n * @customfunction FS_MUTUALFUNDCANDLES FS_MutualFundCandles\n * @param symbol {string} Mutual Fund Symbol.\n * @param resolution {string} Resolution.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_MutualFundCandles(symbol, resolution, from= undefined, to = undefined, ){\n  return candlesHelper(symbol, resolution, from, to , \"mutual_fund\" )\n}\n\n/**\n * @customfunction FS_FOREXALLRATES FS_ForexAllRates\n * @param base_currency {string} base_currency.\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_ForexAllRates(base_currency=\"USD\", ){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n\n  //// Now get data\n  var prepare = {base_currency: base_currency, api_key: api_key}\n  const url = link + \"/excel/forex_all_rates?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    return [[\"No data\"]]\n  }\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n  var data_to_return = []\n  for(var key of Object.keys(data)){\n    data_to_return.push([key, data[key]])\n  }\n  return data_to_return\n}\n\nvar map_name_crypto_profile = {\n  \"name\": \"Name\",\n  \"longName\": \"Full Name\",\n  \"description\": \"Description\",\n  \"marketCap\": \"Market Capitalization\",\n  \"totalSupply\": \"Total Supply\",\n  \"maxSupply\": \"Max Supply\",\n  \"circulatingSupply\": \"Circulating Supply\",\n  \"launchDate\": \"Launch Date\",\n  \"website\": \"Website\",\n  \"proofType\": \"Proof Type\"\n}\n\n/**\n * @customfunction FS_CRYPTOPROFILE FS_CryptoProfile\n * @param symbol {string} Crypto symbol such as BTC or ETH.\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_CryptoProfile(symbol, ){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return [[\"Symbol cannot be empty\"]]}\n  if(typeof symbol !== 'string'){return [['Symbol has to be a string']]}\n  if(symbol.includes(':')){return [['Invalid symbol, make sure it does not include exchange name']]}\n  symbol = symbol.toUpperCase()\n\n  //// Now get data\n  var prepare = {symbol: symbol, api_key: api_key, which: \"crypto_profile\"}\n  const url = link + \"/excel/asset_profile?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    return [[\"No data\"]]\n  }\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  var data = json.data\n  var data_to_return = []\n  for(var key of Object.keys(map_name_crypto_profile)){\n    if(data[key]){\n      data_to_return.push([map_name_crypto_profile[key], data[key]])\n    }\n  }\n  return data_to_return\n}\n\n\nvar map_name_etf_profile = {\n  \"assetClass\": \"Asset Class\",\n  \"aum\": \"AUM\",\n  \"avgVolume\": \"Avg Volume\",\n  \"cusip\": \"CUSIP\",\n  \"description\": \"Description\",\n  \"domicile\": \"Domicile\",\n  \"etfCompany\": \"ETF Issuer\",\n  \"expenseRatio\": \"Expense Ratio\",\n  \"inceptionDate\": \"Inception Date\",\n  \"investmentSegment\": \"Investment Segment\",\n  \"isin\": \"ISIN\",\n  \"name\": \"Name\",\n  \"nav\": \"NAV\",\n  \"navCurrency\": \"NAV Currency\",\n  \"priceToBook\": \"P/B\",\n  \"priceToEarnings\": \"P/E\",\n  \"trackingIndex\": \"Tracking Index\",\n  \"website\": \"Website\"\n}\n/**\n * @customfunction FS_ETFPROFILE FS_EtfProfile\n * @param symbol {string} ETF symbol.\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_EtfProfile(symbol, ){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return [[\"Symbol cannot be empty\"]]}\n  if(typeof symbol !== 'string'){return [['Symbol has to be a string']]}\n  symbol = symbol.toUpperCase()\n\n  //// Now get data\n  var prepare = {symbol: symbol, api_key: api_key, which: \"etf_profile\"}\n  const url = link + \"/excel/asset_profile?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    var error = await response.text()\n    return [[JSON.parse(error).error]]\n  }\n\n  var json = await response.json()\n  // console.log(json)\n  if('message' in json){return [[json.message]]}\n  var data = json.data.profile\n  var data_to_return = []\n  if(json.data.symbol){data_to_return = [['Symbol', json.data.symbol]]}\n  for(var key of Object.keys(map_name_etf_profile)){\n    if(data[key]){\n      data_to_return.push([map_name_etf_profile[key], data[key]])\n    }\n  }\n  return data_to_return\n}\n\nvar map_name_mutual_fund_profile = {\n  \"benchmark\": \"Benchmark\",\n  \"beta\": 'Beta',\n  \"category\": \"Category\",\n\n  \"description\": 'Description',\n  \"expenseRatio\": 'Expense Ratio',\n\n  \"fundFamily\": \"Fund Family\",\n  \"inceptionDate\": \"Inception Date\",\n  \"investmentSegment\": \"Investment Segment\",\n\n  \"name\": \"Full Name\",\n\n  \"totalNav\": \"Total NAV\",\n  \"turnover\": \"Turnover\"\n}\n\n/**\n * @customfunction FS_MUTUALFUNDPROFILE FS_MutualFundProfile\n * @param symbol {string} Mutual Fund symbol.\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_MutualFundProfile(symbol, ){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return [[\"Symbol cannot be empty\"]]}\n  if(typeof symbol !== 'string'){return [['Symbol has to be a string']]}\n  symbol = symbol.toUpperCase()\n\n  //// Now get data\n  var prepare = {symbol: symbol, api_key: api_key, which: \"mutual_fund_profile\"}\n  const url = link + \"/excel/asset_profile?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    var error = await response.text()\n    return [[JSON.parse(error).error]]\n  }\n\n  var json = await response.json()\n  // console.log(json)\n  if('message' in json){return [[json.message]]}\n  var data = json.data.profile\n  var data_to_return = []\n  if(json.data.symbol){data_to_return = [['Symbol', json.data.symbol]]}\n  for(var key of Object.keys(map_name_mutual_fund_profile)){\n    if(data[key]){\n      data_to_return.push([map_name_mutual_fund_profile[key], data[key]])\n    }\n  }\n  return data_to_return\n}\n\n\n/**\n * @customfunction FS_LATEST FS_Latest\n * @param symbol {string} Symbol.\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_Latest(symbol, ){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if(!symbol){return [[\"Symbol cannot be empty\"]]}\n  if(typeof symbol !== 'string'){return [['Symbol has to be a string']]}\n  symbol = symbol.toUpperCase()\n\n  //// Now get data\n  var prepare = {ticker: symbol, api_key: api_key, }\n  const url = link + \"/excel/latest?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    var error = await response.text()\n    return [[JSON.parse(error).error]]\n  }\n\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n\n  return [[json.data]]\n}\n\n////// Websocket\n\n\nfunction connect(first_symbol) {\n  var api_key = readCookie(\"finsheet_api_key\");\n  window.socket = new WebSocket('wss://' + link.slice(8,) + '/ws?api_key=' + api_key)\n\n  window.socket.onopen = function() {\n    console.log('Socket open')\n    if(first_symbol){\n      window.socket.send(JSON.stringify({symbol: first_symbol, \"type\": \"subscribe\",}))\n      window.can_call_streaming = true\n    }\n  };\n\n  window.socket.onmessage = function(e) {\n    if(window.Should_Update_Streaming){   // Whether user chooses to pause or not pause streaming\n      var data = JSON.parse(e.data)\n      var symbol = data.data[0].s\n      window.OldBigSymbolPriceMap[symbol] = window.BigSymbolPriceMap[symbol]\n      window.BigSymbolPriceMap[symbol] = data.data[0].p\n    }\n  };\n\n  window.socket.onclose = function(e) {\n    console.log(12, e)\n    setTimeout(function() {\n      if(e.code === 1000){\n        window.have_not_reconnect_websocket = false\n        connect();\n      } else {\n        window.can_call_streaming = false\n      }\n\n    }, 1000);\n  };\n\n  window.socket.onerror = function(err) {\n    console.log(err)\n    console.error('Socket encountered error: ', err.message, 'Closing socket');\n    window.socket.close();\n  };\n}\n\nwindow.OldBigSymbolPriceMap = {}\nwindow.BigSymbolPriceMap = {}\n// window.OldEachCellStreamingValue = {}\nwindow.EachCellStreamingValue = {}\n\nwindow.Should_Update_Streaming = true\nwindow.have_not_reconnect_websocket = true\nwindow.have_not_add_on_calculated_trigger = true\nwindow.have_not_set_interval_change_color = true\n\nwindow.can_call_streaming = true\n\nconnect()\n\n/**\n * Stream Real-time price for Stocks, Cryptos, Forex, ETFs and Mutual Funds.\n * @customfunction FS_STREAMING FS_Streaming\n * @param symbol {string}  Symbol.\n * @param {CustomFunctions.StreamingInvocation<string>} invocation * ...\n */\nasync function FS_Streaming(symbol, invocation ){\n  Excel.run(async (context) => {\n    if(window.have_not_set_interval_change_color){\n      window.have_not_set_interval_change_color = false\n      setInterval(async () => {\n        if(!window.Should_Update_Streaming){return}\n        var active_sheet = context.workbook.worksheets.getActiveWorksheet();\n        var range = active_sheet.getUsedRange(true);\n        range.load(\"formulas\");\n        range.load(\"address\");\n        range.load(\"values\");\n\n        await context.sync()\n            .then(async function () {\n              var sheet_id = active_sheet.id\n\n              var address_portion = range.address.split('!')[1].split(':')[0]\n              var starting_row = 0, starting_col = 0\n              for(var i=0; i<address_portion.length; i++){\n                if(!isNaN(address_portion[i])){\n                  starting_col = colnameToNumber(address_portion.slice(0,i)) - 1\n                  starting_row = parseInt(address_portion.slice(i,)) -1\n                  break\n                }\n              }\n\n\n\n\n              var green_cell = []\n              var red_cell = []\n              var formulas = range.formulas\n              var values = range.values\n              for(var i=0;i<formulas.length; i++){\n                for(var j=0;j<formulas[0].length; j++ ){\n                  var current_formula = formulas[i][j]\n                  if(current_formula.toLowerCase().startsWith('=fs_streaming(')){\n                    var arr = current_formula.split('\"')\n                    // This one handle when formula is direct like FS_Streaming(\"AAPL\")\n                    if(arr.length === 3){\n                      var symbol = arr[1]\n                      if(window.BigSymbolPriceMap[symbol] && window.OldBigSymbolPriceMap[symbol]){\n                        if(window.BigSymbolPriceMap[symbol] > window.OldBigSymbolPriceMap[symbol]){\n                          green_cell.push([starting_row + i, starting_col + j])\n                        } else if(window.BigSymbolPriceMap[symbol] < window.OldBigSymbolPriceMap[symbol]){\n                          red_cell.push([starting_row + i, starting_col + j])\n                        }\n                        // // After updating color once, set they equal each other so that no more color change while waiting for new websocket message\n                        // window.OldBigSymbolPriceMap[symbol] = window.BigSymbolPriceMap[symbol]\n                      }\n                    }\n\n                    // This one handle when formula refers to another cell (save data to global dict, compare before and after\n                    else {\n                      var used_key = sheet_id + '@@' + (starting_row + i) + '@@' + (starting_col + j)\n                      if(window.EachCellStreamingValue[used_key] && values[i][j]){\n                        if(values[i][j] > window.EachCellStreamingValue[used_key] ){\n                          green_cell.push([starting_row + i, starting_col + j])\n                        } else if(values[i][j] < window.EachCellStreamingValue[used_key] ){\n                          red_cell.push([starting_row + i, starting_col + j])\n                        }\n                      }\n                      window.EachCellStreamingValue[used_key] = values[i][j]\n                    }\n                  }\n                }\n              }\n\n              // Now change background color\n              var temp_arr = [[green_cell, '#2cbd54'], [red_cell, '#ff6669']]\n              for(var sub_arr of temp_arr){\n                var cell_text = ''\n                for(var arr of sub_arr[0]){\n                  var col_name = getExcelColName(arr[1])\n                  cell_text += col_name.toUpperCase() + (arr[0] + 1) + ':' + col_name.toUpperCase() + (arr[0] + 1) + ', '\n                }\n                if(cell_text !== ''){cell_text = cell_text.slice(0, cell_text.length - 2)}\n                const  green_area = active_sheet.getRanges(cell_text);\n                if(cell_text){\n                  // console.log(cell_text, window.OldBigSymbolPriceMap, window.BigSymbolPriceMap)\n                  green_area.format.font.color = sub_arr[1];\n\n                  await context.sync().then(async function(){\n                    // setTimeout(async function() {\n                    //   const green_area = active_sheet.getRanges(cell_text);\n                    //   green_area.format.font.color = \"black\";\n                    //   await context.sync()\n                    // }, 500);\n\n                  });\n                }\n              }\n\n\n            });\n\n      }, 500);\n\n\n    }\n\n  });\n\n\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return \"Please login using the sidebar\" }\n  if (!symbol) { return \"Symbol cannot be empty\" }\n  if (typeof symbol !== 'string') { return 'Symbol has to be a string' }\n\n  symbol = symbol.toUpperCase()\n  // The first if is to use the first time when user open the file, since websocket is delayed, we connect to websocket here\n  if((!window.socket || window.socket.readyState !== window.socket.OPEN) && window.have_not_reconnect_websocket){\n    // console.log(window.socket.readyState, window.socket.OPEN)\n    connect(symbol)\n  } else if(!(symbol in window.BigSymbolPriceMap)){\n    // console.log(0)\n    let msg = {symbol: symbol,   type: \"subscribe\"}\n    window.socket.send(JSON.stringify(msg))\n    window.can_call_streaming = true\n    // console.log(3)\n  }\n\n  const timer = setInterval(() => {\n    if(window.can_call_streaming){\n      const result = window.BigSymbolPriceMap[symbol];\n      // console.log(invocation)\n      invocation.setResult(result);\n    } else {\n      invocation.setResult('You need a Plus or Pro membership to stream real-time price.');\n    }\n\n  }, 500);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n\n\n\n/**\n * @customfunction FS_PATTERNRECOGNITION FS_PatternRecognition\n * @param symbol {string} Symbol.\n * @param resolution {string} Resolution.\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_PatternRecognition(symbol, resolution,){\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if (!symbol) { return [[\"Symbol cannot be empty\"]] }\n  if (typeof symbol !== 'string') { return [['Symbol has to be a string']] }\n  if(symbol.includes(\",\") || symbol.includes(\";\")){return [\"Invalid symbol\"]}\n  symbol = symbol.toUpperCase()\n\n  if (!(resolution in valid_resolution)) { return [['Invalid resolution']] }\n  if (resolution in lower_res) { resolution = resolution.toUpperCase() }\n\n  var prepare = {api_key : api_key, symbol: symbol, resolution: resolution, which: 'pattern_recognition'}\n  console.log(0, prepare)\n  const url = link + \"/excel/technical?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    var error = await response.text()\n    try{return [[JSON.parse(error).error]]}\n    catch (e) {return [[\"No data\"]]}\n  }\n  var json = await response.json()\n  if('message' in json){return [[json.message]]}\n  try {\n    var data = json.data\n    var data_to_return = []\n    var max_len = 1\n    for(var dic of data){\n      if(!dic.patternname || !dic.symbol){continue}\n      var one_result = [['Pattern Name',dic.patternname ]]\n      for(var key of Object.keys(dic)){\n        if(key !== 'patternname' && key !== 'symbol'){\n          one_result.push([capFirst(key), dic[key]])\n        }\n      }\n\n      if(one_result.length > max_len){\n        max_len = one_result.length\n      }\n      data_to_return.push(one_result)\n    }\n    for(var i=0;i<data_to_return.length; i++){\n      const number_to_add = max_len - data_to_return[i].length\n      for(var j=0; j< number_to_add; j++){\n        data_to_return[i].push(['',''])\n        console.log(data_to_return[i].length)\n      }\n    }\n    if (data_to_return.length < 1 ){return  [['No data']]}\n    var final = []\n    for(var i=0;i<data_to_return[0].length; i++){\n      var arr = []\n      for(var temp of data_to_return){\n        arr = arr.concat(temp[i])\n      }\n      final.push(arr)\n    }\n    console.log(final)\n    return final\n  } catch (e) {\n    return [['No data']]\n  }\n\n}\n\n/**\n * @customfunction FS_SUPPORTRESISTANCE FS_SupportResistance\n * @param symbol {string} Symbol.\n * @param resolution {string} Resolution.\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_SupportResistance(symbol, resolution,) {\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) {\n    return [[\"Please login using the sidebar\"]]\n  }\n  if (!symbol) {\n    return [[\"Symbol cannot be empty\"]]\n  }\n  if (typeof symbol !== 'string') {\n    return [['Symbol has to be a string']]\n  }\n  if (symbol.includes(\",\") || symbol.includes(\";\")) {\n    return [\"Invalid symbol\"]\n  }\n  symbol = symbol.toUpperCase()\n\n  if (!(resolution in valid_resolution)) {\n    return [['Invalid resolution']]\n  }\n  if (resolution in lower_res) {\n    resolution = resolution.toUpperCase()\n  }\n\n  var prepare = {api_key: api_key, symbol: symbol, resolution: resolution, which: 'support_resistance'}\n\n  const url = link + \"/excel/technical?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    var error = await response.text()\n    try {\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [[\"No data\"]]\n    }\n  }\n  var json = await response.json()\n  if ('message' in json) {\n    return [[json.message]]\n  }\n  var data = json.data\n  // var data_to_return = []\n  // for(var i of data){\n  //   data_to_return.push([i])\n  // }\n  try {\n    return data.length < 1 ? [['No data']] : [data]\n  } catch (e) {\n    return [['No data']]\n  }\n}\n\n\n/**\n * @customfunction FS_AGGREGATEINDICATORS FS_AggregateIndicators\n * @param symbol {string} Symbol.\n * @param resolution {string} Resolution.\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_AggregateIndicators(symbol, resolution,) {\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) {\n    return [[\"Please login using the sidebar\"]]\n  }\n  if (!symbol) {\n    return [[\"Symbol cannot be empty\"]]\n  }\n  if (typeof symbol !== 'string') {\n    return [['Symbol has to be a string']]\n  }\n  if (symbol.includes(\",\") || symbol.includes(\";\")) {\n    return [\"Invalid symbol\"]\n  }\n  symbol = symbol.toUpperCase()\n\n  if (!(resolution in valid_resolution)) {\n    return [['Invalid resolution']]\n  }\n  if (resolution in lower_res) {\n    resolution = resolution.toUpperCase()\n  }\n\n  var prepare = {api_key: api_key, symbol: symbol, resolution: resolution, which: 'aggregate_indicators'}\n\n  const url = link + \"/excel/technical?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    var error = await response.text()\n    try {\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [[\"No data\"]]\n    }\n  }\n  var json = await response.json()\n  if ('message' in json) {\n    return [[json.message]]\n  }\n  var data = json.data\n  try{\n\n    return [\n      ['Buy', data.technicalAnalysis.count.buy],\n      ['Neutral', data.technicalAnalysis.count.neutral],\n      ['Sell', data.technicalAnalysis.count.sell],\n      ['Aggregate signal', data.technicalAnalysis.signal],\n      ['ADX reading', data.trend.adx],\n      ['Trending', data.trend.trending.toString()],\n    ]\n  } catch (e) {\n    return [['No data']]\n  }\n}\n\n\n/**\n * @customfunction FS_TECHNICALINDICATORS FS_TechnicalIndicators\n * @param symbol {string} Symbol.\n * @param resolution {string} Resolution.\n * @param indicator {string} Indicator name.\n * @param from {string} From.\n * @param [to] {string} To (optional).\n * @param [indicator_fields] {any[][]} Indicator fields (optional).\n * @returns {string[][]} Result array.\n * ...\n */\nasync function FS_TechnicalIndicators(symbol, resolution, indicator, from, to=undefined, indicator_fields=[]) {\n  console.log(12, indicator_fields)\n  return [['']]\n  if (to == null) { to = undefined }\n  var api_key = readCookie(\"finsheet_api_key\");\n  if (!api_key) { return [[\"Please login using the sidebar\"]] }\n  if (!symbol) { return [[\"Symbol cannot be empty\"]] }\n  if (typeof symbol !== 'string') { return [['Symbol has to be a string']] }\n  if(symbol.includes(\",\") || symbol.includes(\";\")){return [\"Invalid symbol\"]}\n  symbol = symbol.toUpperCase()\n\n  if (!(resolution in valid_resolution)) { return [['Invalid resolution']] }\n  if (resolution in lower_res) { resolution = resolution.toUpperCase() }\n\n  if (typeof indicator !== 'string') { return [['Indicator has to be a string']] }\n  indicator = indicator.toLowerCase()\n\n  var current_time = Date.parse(new Date()) / 1000\n  //// Check from\n  if(!from){return [[\"'from' cannot be empty\"]]}\n\n  // Handle unix time\n  if(typeof from == 'number' || !isNaN(from)){\n    from = Math.round(from)\n  }\n  // Now convert string/Date object or whatever input user gives.\n  else{\n    from = Date.parse(from) / 1000\n    if(isNaN(from) || from < 0) return [[\"Invalid 'from'\"]]\n  }\n\n  //// Check to\n  if(to == '' || to === undefined){\n    to = current_time\n  }\n  // Handle unix time\n  else if(typeof to == 'number' || !isNaN(to)){\n    to = Math.round(to)\n  }\n  // Now convert string/Date object or whatever input user gives.\n  else{\n    to = Date.parse(to) / 1000\n    if(isNaN(to) || to < 0) return [[\"Invalid 'to'\"]]\n  }\n  if(to <=from){return [[\"'to' has to be after 'from'\"]]}\n\n  var prepare = {}\n  try{\n    var indicator_fields_dic = JSON.parse(indicator_fields.replaceAll(\"'\", '\"'))\n    for(var key of Object.keys(indicator_fields_dic)){\n      indicator_fields_dic[key] = indicator_fields_dic[key].toString()\n    }\n    prepare = { symbol: symbol, resolution: resolution, from: from, to: to, api_key: api_key, indicator: indicator, indicator_fields: JSON.stringify(indicator_fields_dic), which: 'technical_indicators'}\n  } catch (e) {\n    return [[\"Invalid indicator_fields\"]]\n  }\n\n  console.log('prepare', prepare)\n  //// Now send get data\n  const url = link + \"/excel/technical?\" + new URLSearchParams(prepare).toString()\n  const response = await fetch(url);\n\n  //Expect that status code is in 200-299 range\n  if (!response.ok) {\n    var error = await response.text()\n    try {\n      return [[JSON.parse(error).error]]\n    } catch (e) {\n      return [[\"No data\"]]\n    }\n  }\n\n  var json = await response.json()\n  console.log(json)\n  if('message' in json){return [[json.message]]}\n  try {\n    var data = json.data\n\n\n    if (!data.c) { return [['No data']] }\n    var standard_columns = {t:1, c:1, o:1, h:1, l:1, v:1, s:1}\n    var new_columns = []\n    var data_to_return = [['Period', 'Close', 'Open', 'High', 'Low', 'Volume']]\n    for(var key of Object.keys(data)){\n      if(!standard_columns[key]){\n        new_columns.push(key)\n        data_to_return[0].push(capFirst(key))\n      }\n    }\n\n    for(var i=0;i<data.c.length;i++){\n      var arr = [\n        data.t && data.t[i] ? new Date(data.t[i] * 1000) : '',\n        data.c[i] ? data.c[i] : '',\n        data.o && data.o[i] ? data.o[i] : '',\n        data.h && data.h[i] ? data.h[i] : '',\n        data.l && data.l[i] ? data.l[i] : '',\n        data.v && data.v[i] ? data.v[i] : '',\n      ]\n      for(key of new_columns){\n        arr.push(data[key] && data[key][i] !== null && data[key][i] !== undefined ? data[key][i] : '')\n      }\n      data_to_return.push(arr)\n    }\n    if (data_to_return.length < 2) { return [['No data']] }\n    console.log(data_to_return)\n    return data_to_return\n  } catch (e) {\n    return [['No data']]\n  }\n\n}\nCustomFunctions.associate(\"FS_EQUITYMETRICS\", FS_EquityMetrics);\nCustomFunctions.associate(\"FS_EQUITYFULLFINANCIALS\", FS_EquityFullFinancials);\nCustomFunctions.associate(\"FS_EQUITYCANDLES\", FS_EquityCandles);\nCustomFunctions.associate(\"FS_FOREXCANDLES\", FS_ForexCandles);\nCustomFunctions.associate(\"FS_CRYPTOCANDLES\", FS_CryptoCandles);\nCustomFunctions.associate(\"FS_ETFCANDLES\", FS_EtfCandles);\nCustomFunctions.associate(\"FS_MUTUALFUNDCANDLES\", FS_MutualFundCandles);\nCustomFunctions.associate(\"FS_FOREXALLRATES\", FS_ForexAllRates);\nCustomFunctions.associate(\"FS_CRYPTOPROFILE\", FS_CryptoProfile);\nCustomFunctions.associate(\"FS_ETFPROFILE\", FS_EtfProfile);\nCustomFunctions.associate(\"FS_MUTUALFUNDPROFILE\", FS_MutualFundProfile);\nCustomFunctions.associate(\"FS_LATEST\", FS_Latest);\nCustomFunctions.associate(\"FS_STREAMING\", FS_Streaming);\nCustomFunctions.associate(\"FS_PATTERNRECOGNITION\", FS_PatternRecognition);\nCustomFunctions.associate(\"FS_SUPPORTRESISTANCE\", FS_SupportResistance);\nCustomFunctions.associate(\"FS_AGGREGATEINDICATORS\", FS_AggregateIndicators);\nCustomFunctions.associate(\"FS_TECHNICALINDICATORS\", FS_TechnicalIndicators);"],"names":["equityHelper","symbol","metric","period","undefined","limit","api_key","readCookie","freq","ticker","includes","toUpperCase","toLowerCase","map_excel_name_to_id","id","is_full_statement","map_metrics","default_freq","supported_freq","isValidFreq_returnCleanString","prepare","metric_full_info","field_code","generate_query","url","link","URLSearchParams","toString","fetch","response","ok","text","error","console","log","JSON","parse","json","message","handle_receive_AR_EQUITY","statement","valid_resolution","lower_res","properties","candlesHelper","resolution","from","to","which","current_time","Date","isNaN","Math","round","stringify","data","data_to_return","c","constructor","Array","i","length","push","t","o","h","l","v","base_currency","Object","keys","key","map_name_crypto_profile","map_name_etf_profile","profile","map_name_mutual_fund_profile","connect","first_symbol","window","socket","WebSocket","slice","onopen","send","can_call_streaming","onmessage","e","Should_Update_Streaming","s","OldBigSymbolPriceMap","BigSymbolPriceMap","p","onclose","setTimeout","code","have_not_reconnect_websocket","onerror","err","close","invocation","Excel","run","context","have_not_set_interval_change_color","setInterval","active_sheet","workbook","worksheets","getActiveWorksheet","range","getUsedRange","load","sync","then","sheet_id","address_portion","address","split","starting_row","starting_col","colnameToNumber","parseInt","green_cell","red_cell","formulas","values","j","current_formula","startsWith","arr","used_key","EachCellStreamingValue","sub_arr","cell_text","col_name","getExcelColName","green_area","getRanges","format","font","color","readyState","OPEN","msg","type","timer","result","setResult","onCanceled","clearInterval","max_len","dic","patternname","one_result","capFirst","number_to_add","final","temp","concat","technicalAnalysis","count","buy","neutral","sell","signal","trend","adx","trending","indicator","indicator_fields","indicator_fields_dic","replaceAll","standard_columns","new_columns","have_not_add_on_calculated_trigger","CustomFunctions","associate","FS_EquityMetrics","FS_EquityFullFinancials","FS_EquityCandles","FS_ForexCandles","FS_CryptoCandles","FS_EtfCandles","FS_MutualFundCandles","FS_Streaming","FS_PatternRecognition","FS_SupportResistance","FS_AggregateIndicators","FS_TechnicalIndicators"],"sourceRoot":""}